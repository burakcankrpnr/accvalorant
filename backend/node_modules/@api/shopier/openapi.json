{
  "openapi": "3.1.0",
  "info": {
    "title": "API ENDPOINTS",
    "version": "1.0",
    "description": "Shopier REST API OpenAPI Specification document",
    "contact": {
      "name": "Shopier Support",
      "url": "developer.shopier.com",
      "email": "hello@shopier.com"
    }
  },
  "servers": [
    {
      "url": "https://api.shopier.com/v1/",
      "description": "prod"
    }
  ],
  "tags": [
    {
      "name": "Balance",
      "description": "Operations to manage the balance."
    },
    {
      "name": "Categories",
      "description": "Operations to manage the product categories."
    },
    {
      "name": "Discounts",
      "description": "Operations to manage the discount codes and automatic discounts."
    },
    {
      "name": "Orders",
      "description": "Operations to manage the orders."
    },
    {
      "name": "Payouts",
      "description": "Operations to manage the payouts."
    },
    {
      "name": "Products",
      "description": "Operations to manage the products."
    },
    {
      "name": "Refunds",
      "description": "Operations to manage the refunds."
    },
    {
      "name": "Selections",
      "description": "Operations to manage the product selections."
    },
    {
      "name": "Shippings",
      "description": "Operations to manage the shippings."
    },
    {
      "name": "Shop",
      "description": "Operations to manage the shop."
    },
    {
      "name": "Variations",
      "description": "Operations to manage the product variations."
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "List all products",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Product",
                    "type": "object",
                    "description": "Product model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the product."
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the product."
                      },
                      "description": {
                        "type": "string",
                        "description": "Detailed description of the product."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "physical",
                          "digital"
                        ],
                        "description": "Type of the product."
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "The date and time of the initial product listing. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "dateUpdated": {
                        "type": "string",
                        "description": "The date and time of the product update. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of the product. \n(e.g., https://www.shopier.com/696547)"
                      },
                      "media": {
                        "type": "array",
                        "description": "Details of product media files.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of media file."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "image"
                              ],
                              "description": "Type of media file."
                            },
                            "url": {
                              "type": "string",
                              "description": "The URL of media file.\n(e.g., https://dmih5ui1qqea9.cloudfront.net/pictures_large/Camiseta6855_cobalt-blue-t-shirt.jpg)"
                            },
                            "placement": {
                              "type": "integer",
                              "description": "Ranking of the media file in product pages. Returns \"1\" for the primary media file.",
                              "minimum": 1,
                              "multipleOf": 1,
                              "maximum": 5
                            }
                          }
                        }
                      },
                      "priceData": {
                        "type": "object",
                        "description": "Details of the price information.",
                        "properties": {
                          "currency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Currency of the product."
                          },
                          "price": {
                            "type": "string",
                            "description": "Unit price of the product."
                          },
                          "discount": {
                            "type": "boolean",
                            "description": "Represents whether there is a product based discount."
                          },
                          "discountedPrice": {
                            "type": "string",
                            "description": "Discounted price of the product."
                          },
                          "shippingPrice": {
                            "type": "string",
                            "description": "Shipping price of the product."
                          }
                        }
                      },
                      "stockStatus": {
                        "type": "string",
                        "enum": [
                          "inStock",
                          "outOfStock"
                        ],
                        "description": "Current stock status of the product."
                      },
                      "stockQuantity": {
                        "type": "integer",
                        "description": "Current stock quantity of the product."
                      },
                      "shippingPayer": {
                        "type": "string",
                        "enum": [
                          "sellerPays",
                          "buyerPays"
                        ],
                        "description": "Represents who pays for shipping during dispatch or delivery."
                      },
                      "categories": {
                        "type": "array",
                        "description": "List of categories that product belongs to.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of category."
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of category."
                            }
                          }
                        }
                      },
                      "variants": {
                        "type": "array",
                        "description": "List of variants of the product.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "variationId": {
                              "type": "array",
                              "description": "The ID of variation.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "variationTitle": {
                              "type": "array",
                              "description": "The title of variation.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "selectionId": {
                              "type": "array",
                              "description": "The ID of selection.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "selectionTitle": {
                              "type": "array",
                              "description": "The title of selection.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "stockStatus": {
                              "type": "string",
                              "enum": [
                                "inStock",
                                "outOfStock"
                              ],
                              "description": "Current stock status of the variant."
                            },
                            "stockQuantity": {
                              "type": "integer",
                              "description": "Current stock quantity of the variant."
                            }
                          }
                        }
                      },
                      "options": {
                        "type": "array",
                        "description": "List of options of the product.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of option."
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of option."
                            },
                            "price": {
                              "type": "string",
                              "description": "The price of option."
                            }
                          }
                        }
                      },
                      "singleOption": {
                        "type": "boolean",
                        "description": "Represents whether a single option or multiple options can be selected during chekout."
                      },
                      "customListing": {
                        "type": "boolean",
                        "description": "Represents whether the listing is a custom or standard one."
                      },
                      "customNote": {
                        "type": "string",
                        "description": "Overrides the placeholder for note to seller field. Used for collecting a custom information from the buyer during checkout."
                      },
                      "placementScore": {
                        "type": "integer",
                        "minimum": 1,
                        "multipleOf": 1,
                        "description": "Placement score of the product. Products with higher values are placed first in the store."
                      },
                      "dispatchDuration": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 3,
                        "multipleOf": 1,
                        "description": "Dispatch duration in terms of days from seller to shipping company."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-products",
        "description": "Returns a list of products with the provided limit, paging, sorting and filters. By default, products are returned in sorted order, with the most recent product listings appearing first.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateStart",
            "description": "Show products listed at or after datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateEnd",
            "description": "Show products listed at or before datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-25T13:24:51+0300)"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "physical",
                "digital"
              ]
            },
            "in": "query",
            "description": "Filter by a product type. ",
            "name": "productType"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "buyerPays",
                "sellerPays"
              ]
            },
            "in": "query",
            "description": "Filter by who pays for shipping. ",
            "name": "shippingPayer"
          },
          {
            "schema": {
              "type": "string",
              "items": {
                "type": "string"
              },
              "enum": [
                "inStock",
                "outOfStock"
              ]
            },
            "in": "query",
            "name": "stockStatus",
            "description": "Filter by a stock status."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "description": "Filter by product categories by specifying category ID(s).",
            "name": "categoryId"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "description": "Filter by product selections by specifying selection ID(s).",
            "name": "selectionId"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "discount",
            "description": "Filter by products with discounts."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "customListing",
            "description": "Filter by customized listings."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ]
      },
      "post": {
        "summary": "Create a product",
        "operationId": "post-products",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "type": "object",
                  "description": "Product model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product."
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the product."
                    },
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the product."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "physical",
                        "digital"
                      ],
                      "description": "Type of the product."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time of the initial product listing. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "dateUpdated": {
                      "type": "string",
                      "description": "The date and time of the product update. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL of the product. \n(e.g., https://www.shopier.com/696547)"
                    },
                    "media": {
                      "type": "array",
                      "description": "Details of product media files.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of media file."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "image"
                            ],
                            "description": "Type of media file."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of media file.\n(e.g., https://dmih5ui1qqea9.cloudfront.net/pictures_large/Camiseta6855_cobalt-blue-t-shirt.jpg)"
                          },
                          "placement": {
                            "type": "integer",
                            "description": "Ranking of the media file in product pages. Returns \"1\" for the primary media file.",
                            "minimum": 1,
                            "multipleOf": 1,
                            "maximum": 5
                          }
                        }
                      }
                    },
                    "priceData": {
                      "type": "object",
                      "description": "Details of the price information.",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ],
                          "description": "Currency of the product."
                        },
                        "price": {
                          "type": "string",
                          "description": "Unit price of the product."
                        },
                        "discount": {
                          "type": "boolean",
                          "description": "Represents whether there is a product based discount."
                        },
                        "discountedPrice": {
                          "type": "string",
                          "description": "Discounted price of the product."
                        },
                        "shippingPrice": {
                          "type": "string",
                          "description": "Shipping price of the product."
                        }
                      }
                    },
                    "stockStatus": {
                      "type": "string",
                      "enum": [
                        "inStock",
                        "outOfStock"
                      ],
                      "description": "Current stock status of the product."
                    },
                    "stockQuantity": {
                      "type": "integer",
                      "description": "Current stock quantity of the product."
                    },
                    "shippingPayer": {
                      "type": "string",
                      "enum": [
                        "sellerPays",
                        "buyerPays"
                      ],
                      "description": "Represents who pays for shipping during dispatch or delivery."
                    },
                    "categories": {
                      "type": "array",
                      "description": "List of categories that product belongs to.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of category."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of category."
                          }
                        }
                      }
                    },
                    "variants": {
                      "type": "array",
                      "description": "List of variants of the product.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variationId": {
                            "type": "array",
                            "description": "The ID of variation.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "variationTitle": {
                            "type": "array",
                            "description": "The title of variation.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "selectionId": {
                            "type": "array",
                            "description": "The ID of selection.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "selectionTitle": {
                            "type": "array",
                            "description": "The title of selection.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "stockStatus": {
                            "type": "string",
                            "enum": [
                              "inStock",
                              "outOfStock"
                            ],
                            "description": "Current stock status of the variant."
                          },
                          "stockQuantity": {
                            "type": "integer",
                            "description": "Current stock quantity of the variant."
                          }
                        }
                      }
                    },
                    "options": {
                      "type": "array",
                      "description": "List of options of the product.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of option."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of option."
                          },
                          "price": {
                            "type": "string",
                            "description": "The price of option."
                          }
                        }
                      }
                    },
                    "singleOption": {
                      "type": "boolean",
                      "description": "Represents whether a single option or multiple options can be selected during chekout."
                    },
                    "customListing": {
                      "type": "boolean",
                      "description": "Represents whether the listing is a custom or standard one."
                    },
                    "customNote": {
                      "type": "string",
                      "description": "Overrides the placeholder for note to seller field. Used for collecting a custom information from the buyer during checkout."
                    },
                    "placementScore": {
                      "type": "integer",
                      "minimum": 1,
                      "multipleOf": 1,
                      "description": "Placement score of the product. Products with higher values are placed first in the store."
                    },
                    "dispatchDuration": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 3,
                      "multipleOf": 1,
                      "description": "Dispatch duration in terms of days from seller to shipping company."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new product.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the product."
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the product."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "physical",
                      "digital"
                    ],
                    "description": "Type of the product."
                  },
                  "media": {
                    "type": "array",
                    "description": "Details of product media files. There can be a maximum of 5 media files.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "image"
                          ],
                          "description": "Type of media file."
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL of media file. Formats supported: jpg, jpeg, png, bmp."
                        },
                        "placement": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 5,
                          "multipleOf": 1,
                          "description": "Ranking of the media file in product pages. Send \"1\" for the primary media file."
                        }
                      },
                      "required": [
                        "type",
                        "url",
                        "placement"
                      ]
                    }
                  },
                  "priceData": {
                    "type": "object",
                    "description": "Details of the price information.",
                    "required": [
                      "currency",
                      "price"
                    ],
                    "properties": {
                      "currency": {
                        "type": "string",
                        "enum": [
                          "TRY",
                          "USD",
                          "EUR"
                        ],
                        "description": "Currency of the product."
                      },
                      "price": {
                        "type": "string",
                        "description": "Unit price of the product."
                      },
                      "discount": {
                        "type": "boolean",
                        "description": "Represents whether there is a product based discount."
                      },
                      "discountedPrice": {
                        "type": "string",
                        "description": "Discounted price of the product."
                      },
                      "shippingPrice": {
                        "type": "string",
                        "description": "Shipping price of the product."
                      }
                    }
                  },
                  "stockQuantity": {
                    "type": "integer",
                    "description": "Stock quantity of the product."
                  },
                  "shippingPayer": {
                    "type": "string",
                    "enum": [
                      "sellerPays",
                      "buyerPays"
                    ],
                    "description": "Represents who pays for shipping during dispatch or delivery."
                  },
                  "categories": {
                    "type": "array",
                    "description": "List of categories that product belongs to.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "categoryId": {
                          "type": "string",
                          "description": "The ID of category."
                        }
                      }
                    }
                  },
                  "variants": {
                    "type": "array",
                    "description": "List of variants of the product.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "selectionId": {
                          "type": "array",
                          "description": "The ID of selection.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "stockQuantity": {
                          "type": "integer",
                          "description": "Stock quantity of the variant."
                        }
                      }
                    }
                  },
                  "options": {
                    "type": "array",
                    "description": "List of options of the product. There can be a maximum of 3 options.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "optionId": {
                          "type": "string",
                          "description": "The ID of option."
                        },
                        "optionTitle": {
                          "type": "string",
                          "description": "The title of option."
                        },
                        "optionPrice": {
                          "type": "string",
                          "description": "The price of option."
                        }
                      }
                    }
                  },
                  "singleOption": {
                    "type": "boolean",
                    "description": "Represents whether a single option or multiple options can be selected during chekout."
                  },
                  "customListing": {
                    "type": "boolean",
                    "description": "Represents whether the listing is a custom or standard one."
                  },
                  "customNote": {
                    "type": "string",
                    "description": "Overrides the placeholder for note to seller field. Used for collecting a custom information from the buyer during checkout."
                  },
                  "placementScore": {
                    "type": "integer",
                    "minimum": 1,
                    "multipleOf": 1,
                    "description": "Placement score of the product. Products with higher values are placed first in the store."
                  },
                  "dispatchDuration": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 3,
                    "multipleOf": 1,
                    "description": "Dispatch duration in terms of days from seller to shipping company."
                  }
                },
                "required": [
                  "title",
                  "type",
                  "media",
                  "priceData",
                  "shippingPayer"
                ]
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the product ID to retrieve the product."
        }
      ],
      "get": {
        "summary": "Get a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "type": "object",
                  "description": "Product model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product."
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the product."
                    },
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the product."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "physical",
                        "digital"
                      ],
                      "description": "Type of the product."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time of the initial product listing. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "dateUpdated": {
                      "type": "string",
                      "description": "The date and time of the product update. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL of the product. \n(e.g., https://www.shopier.com/696547)"
                    },
                    "media": {
                      "type": "array",
                      "description": "Details of product media files.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of media file."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "image"
                            ],
                            "description": "Type of media file."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of media file.\n(e.g., https://dmih5ui1qqea9.cloudfront.net/pictures_large/Camiseta6855_cobalt-blue-t-shirt.jpg)"
                          },
                          "placement": {
                            "type": "integer",
                            "description": "Ranking of the media file in product pages. Returns \"1\" for the primary media file.",
                            "minimum": 1,
                            "multipleOf": 1,
                            "maximum": 5
                          }
                        }
                      }
                    },
                    "priceData": {
                      "type": "object",
                      "description": "Details of the price information.",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ],
                          "description": "Currency of the product."
                        },
                        "price": {
                          "type": "string",
                          "description": "Unit price of the product."
                        },
                        "discount": {
                          "type": "boolean",
                          "description": "Represents whether there is a product based discount."
                        },
                        "discountedPrice": {
                          "type": "string",
                          "description": "Discounted price of the product."
                        },
                        "shippingPrice": {
                          "type": "string",
                          "description": "Shipping price of the product."
                        }
                      }
                    },
                    "stockStatus": {
                      "type": "string",
                      "enum": [
                        "inStock",
                        "outOfStock"
                      ],
                      "description": "Current stock status of the product."
                    },
                    "stockQuantity": {
                      "type": "integer",
                      "description": "Current stock quantity of the product."
                    },
                    "shippingPayer": {
                      "type": "string",
                      "enum": [
                        "sellerPays",
                        "buyerPays"
                      ],
                      "description": "Represents who pays for shipping during dispatch or delivery."
                    },
                    "categories": {
                      "type": "array",
                      "description": "List of categories that product belongs to.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of category."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of category."
                          }
                        }
                      }
                    },
                    "variants": {
                      "type": "array",
                      "description": "List of variants of the product.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variationId": {
                            "type": "array",
                            "description": "The ID of variation.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "variationTitle": {
                            "type": "array",
                            "description": "The title of variation.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "selectionId": {
                            "type": "array",
                            "description": "The ID of selection.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "selectionTitle": {
                            "type": "array",
                            "description": "The title of selection.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "stockStatus": {
                            "type": "string",
                            "enum": [
                              "inStock",
                              "outOfStock"
                            ],
                            "description": "Current stock status of the variant."
                          },
                          "stockQuantity": {
                            "type": "integer",
                            "description": "Current stock quantity of the variant."
                          }
                        }
                      }
                    },
                    "options": {
                      "type": "array",
                      "description": "List of options of the product.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of option."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of option."
                          },
                          "price": {
                            "type": "string",
                            "description": "The price of option."
                          }
                        }
                      }
                    },
                    "singleOption": {
                      "type": "boolean",
                      "description": "Represents whether a single option or multiple options can be selected during chekout."
                    },
                    "customListing": {
                      "type": "boolean",
                      "description": "Represents whether the listing is a custom or standard one."
                    },
                    "customNote": {
                      "type": "string",
                      "description": "Overrides the placeholder for note to seller field. Used for collecting a custom information from the buyer during checkout."
                    },
                    "placementScore": {
                      "type": "integer",
                      "minimum": 1,
                      "multipleOf": 1,
                      "description": "Placement score of the product. Products with higher values are placed first in the store."
                    },
                    "dispatchDuration": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 3,
                      "multipleOf": 1,
                      "description": "Dispatch duration in terms of days from seller to shipping company."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-products-id",
        "description": "Returns a single product with the provided product ID."
      },
      "delete": {
        "summary": "Delete a product",
        "operationId": "delete-products-id",
        "description": "Deletes a product with the provided product ID.",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Update a product",
        "operationId": "put-products-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "type": "object",
                  "description": "Product model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product."
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the product."
                    },
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the product."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "physical",
                        "digital"
                      ],
                      "description": "Type of the product."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time of the initial product listing. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "dateUpdated": {
                      "type": "string",
                      "description": "The date and time of the product update. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "url": {
                      "type": "string",
                      "description": "The URL of the product. \n(e.g., https://www.shopier.com/696547)"
                    },
                    "media": {
                      "type": "array",
                      "description": "Details of product media files.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of media file."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "image"
                            ],
                            "description": "Type of media file."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of media file.\n(e.g., https://dmih5ui1qqea9.cloudfront.net/pictures_large/Camiseta6855_cobalt-blue-t-shirt.jpg)"
                          },
                          "placement": {
                            "type": "integer",
                            "description": "Ranking of the media file in product pages. Returns \"1\" for the primary media file.",
                            "minimum": 1,
                            "multipleOf": 1,
                            "maximum": 5
                          }
                        }
                      }
                    },
                    "priceData": {
                      "type": "object",
                      "description": "Details of the price information.",
                      "properties": {
                        "currency": {
                          "type": "string",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ],
                          "description": "Currency of the product."
                        },
                        "price": {
                          "type": "string",
                          "description": "Unit price of the product."
                        },
                        "discount": {
                          "type": "boolean",
                          "description": "Represents whether there is a product based discount."
                        },
                        "discountedPrice": {
                          "type": "string",
                          "description": "Discounted price of the product."
                        },
                        "shippingPrice": {
                          "type": "string",
                          "description": "Shipping price of the product."
                        }
                      }
                    },
                    "stockStatus": {
                      "type": "string",
                      "enum": [
                        "inStock",
                        "outOfStock"
                      ],
                      "description": "Current stock status of the product."
                    },
                    "stockQuantity": {
                      "type": "integer",
                      "description": "Current stock quantity of the product."
                    },
                    "shippingPayer": {
                      "type": "string",
                      "enum": [
                        "sellerPays",
                        "buyerPays"
                      ],
                      "description": "Represents who pays for shipping during dispatch or delivery."
                    },
                    "categories": {
                      "type": "array",
                      "description": "List of categories that product belongs to.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of category."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of category."
                          }
                        }
                      }
                    },
                    "variants": {
                      "type": "array",
                      "description": "List of variants of the product.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variationId": {
                            "type": "array",
                            "description": "The ID of variation.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "variationTitle": {
                            "type": "array",
                            "description": "The title of variation.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "selectionId": {
                            "type": "array",
                            "description": "The ID of selection.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "selectionTitle": {
                            "type": "array",
                            "description": "The title of selection.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "stockStatus": {
                            "type": "string",
                            "enum": [
                              "inStock",
                              "outOfStock"
                            ],
                            "description": "Current stock status of the variant."
                          },
                          "stockQuantity": {
                            "type": "integer",
                            "description": "Current stock quantity of the variant."
                          }
                        }
                      }
                    },
                    "options": {
                      "type": "array",
                      "description": "List of options of the product.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of option."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of option."
                          },
                          "price": {
                            "type": "string",
                            "description": "The price of option."
                          }
                        }
                      }
                    },
                    "singleOption": {
                      "type": "boolean",
                      "description": "Represents whether a single option or multiple options can be selected during chekout."
                    },
                    "customListing": {
                      "type": "boolean",
                      "description": "Represents whether the listing is a custom or standard one."
                    },
                    "customNote": {
                      "type": "string",
                      "description": "Overrides the placeholder for note to seller field. Used for collecting a custom information from the buyer during checkout."
                    },
                    "placementScore": {
                      "type": "integer",
                      "minimum": 1,
                      "multipleOf": 1,
                      "description": "Placement score of the product. Products with higher values are placed first in the store."
                    },
                    "dispatchDuration": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 3,
                      "multipleOf": 1,
                      "description": "Dispatch duration in terms of days from seller to shipping company."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates a product with the provided product ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the product."
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the product."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "physical",
                      "digital"
                    ],
                    "description": "Type of the product."
                  },
                  "media": {
                    "type": "array",
                    "description": "Details of product media files. There can be a maximum of 5 media files.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "image"
                          ],
                          "description": "Type of media file."
                        },
                        "url": {
                          "type": "string",
                          "description": "he URL of media file. Formats supported: jpg, jpeg, png, bmp."
                        },
                        "placement": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 5,
                          "multipleOf": 1,
                          "description": "Ranking of the media file in product pages. Send \"1\" for the primary media file."
                        }
                      }
                    }
                  },
                  "priceData": {
                    "type": "object",
                    "description": "Details of the price information.",
                    "properties": {
                      "price": {
                        "type": "string",
                        "description": "Unit price of the product."
                      },
                      "discount": {
                        "type": "boolean",
                        "description": "Represents whether there is a product based discount."
                      },
                      "discountedPrice": {
                        "type": "string",
                        "description": "Discounted price of the product."
                      },
                      "shippingPrice": {
                        "type": "string",
                        "description": "Shipping price of the product."
                      }
                    }
                  },
                  "stockQuantity": {
                    "type": "integer",
                    "description": "Stock quantity of the product."
                  },
                  "shippingPayer": {
                    "type": "string",
                    "enum": [
                      "sellerPays",
                      "buyerPays"
                    ],
                    "description": "Represents who pays for shipping during dispatch or delivery."
                  },
                  "categories": {
                    "type": "array",
                    "description": "List of categories that product belongs to.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "categoryId": {
                          "type": "string",
                          "description": "The ID of category."
                        }
                      }
                    }
                  },
                  "variants": {
                    "type": "array",
                    "description": "List of variants of the product.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "selectionId": {
                          "type": "array",
                          "description": "The ID of selection.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "stockQuantity": {
                          "type": "integer",
                          "description": "Stock quantity of the variant."
                        }
                      }
                    }
                  },
                  "options": {
                    "type": "array",
                    "description": "List of options of the product. There can be a maximum of 3 options.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "optionId": {
                          "type": "string",
                          "description": "The ID of option."
                        },
                        "optionTitle": {
                          "type": "string",
                          "description": "The title of option."
                        },
                        "optionPrice": {
                          "type": "string",
                          "description": "The price of option."
                        }
                      }
                    }
                  },
                  "singleOption": {
                    "type": "boolean",
                    "description": "Represents whether a single option or multiple options can be selected during chekout."
                  },
                  "customListing": {
                    "type": "boolean",
                    "description": "Represents whether the listing is a custom or standard one."
                  },
                  "customNote": {
                    "type": "string",
                    "description": "Overrides the placeholder for note to seller field. Used for collecting a custom information from the buyer during checkout."
                  },
                  "placementScore": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Placement score of the product. Products with higher values are placed first in the store."
                  },
                  "dispatchDuration": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 3,
                    "multipleOf": 1,
                    "description": "Dispatch duration in terms of days from seller to shipping company."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/categories": {
      "get": {
        "summary": "List all product categories",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Category",
                    "type": "object",
                    "description": "Category model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the product category."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the product category."
                      },
                      "placement": {
                        "type": "integer",
                        "minimum": 1,
                        "multipleOf": 1,
                        "description": "Ranking of the product category in the shop. Returns \"1\" for the first category, increments accordingly."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-categories",
        "description": "Returns a list of product categories with the provided limit, paging and sorting. By default, categories are returned in sorted order according to their placement in storefront.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "in": "query",
            "name": "sort",
            "description": "Sort results by their placements in storefront."
          }
        ]
      },
      "post": {
        "summary": "Create a product category",
        "operationId": "post-categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Category",
                  "type": "object",
                  "description": "Category model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product category."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product category."
                    },
                    "placement": {
                      "type": "integer",
                      "minimum": 1,
                      "multipleOf": 1,
                      "description": "Ranking of the product category in the shop. Returns \"1\" for the first category, increments accordingly."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new product category.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the product category."
                  },
                  "placement": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Ranking of the product category in the shop. Accepts values in accordance with the number of categories in the shop. When an allocated  placement value is send, following placement values shift."
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "tags": [
          "Categories"
        ]
      }
    },
    "/categories/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the category ID to retrieve the category."
        }
      ],
      "get": {
        "summary": "Get a product category",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Category",
                  "type": "object",
                  "description": "Category model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product category."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product category."
                    },
                    "placement": {
                      "type": "integer",
                      "minimum": 1,
                      "multipleOf": 1,
                      "description": "Ranking of the product category in the shop. Returns \"1\" for the first category, increments accordingly."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-categories-id",
        "description": "Returns a single product category with the provided category ID."
      },
      "delete": {
        "summary": "Delete a product category",
        "operationId": "delete-categories-id",
        "description": "Deletes a product category with the provided category ID.",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Update a product category",
        "operationId": "put-categories-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Category",
                  "type": "object",
                  "description": "Category model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product category."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product category."
                    },
                    "placement": {
                      "type": "integer",
                      "minimum": 1,
                      "multipleOf": 1,
                      "description": "Ranking of the product category in the shop. Returns \"1\" for the first category, increments accordingly."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates a product category with the provided category ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the product category."
                  },
                  "placement": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Ranking of the product category in the shop. Accepts values in accordance with the number of categories in the shop. When an allocated  placement value is send, following placement values shift."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ]
      }
    },
    "/variations": {
      "get": {
        "summary": "List all product variations",
        "tags": [
          "Variations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Variation",
                    "type": "object",
                    "description": "Variation model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the product variation."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the product variation."
                      },
                      "placement": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 2,
                        "multipleOf": 1,
                        "description": "Ranking of the product variation in the shop. Returns \"1\" for the first variation, returns \"2\" for the second variation."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-variations",
        "description": "Returns a list of product variations with the provided limit, paging and sorting. By default, variations are returned in sorted order according to their placement in storefront.",
        "parameters": []
      },
      "post": {
        "summary": "Create a product variation",
        "operationId": "post-variations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Variation",
                  "type": "object",
                  "description": "Variation model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product variation."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product variation."
                    },
                    "placement": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "multipleOf": 1,
                      "description": "Ranking of the product variation in the shop. Returns \"1\" for the first variation, returns \"2\" for the second variation."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new product variation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the product variation."
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "tags": [
          "Variations"
        ]
      }
    },
    "/variations/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the variation ID to retrieve the variation."
        }
      ],
      "get": {
        "summary": "Get a product variation",
        "tags": [
          "Variations"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Variation",
                  "type": "object",
                  "description": "Variation model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product variation."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product variation."
                    },
                    "placement": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "multipleOf": 1,
                      "description": "Ranking of the product variation in the shop. Returns \"1\" for the first variation, returns \"2\" for the second variation."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-variations-id",
        "description": "Returns a single product variation with the provided variation ID."
      },
      "delete": {
        "summary": "Delete a product variation",
        "operationId": "delete-variations-id",
        "description": "Deletes a product variation with the provided variation ID.",
        "tags": [
          "Variations"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Update a product variation",
        "operationId": "put-variations-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Variation",
                  "type": "object",
                  "description": "Variation model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product variation."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product variation."
                    },
                    "placement": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "multipleOf": 1,
                      "description": "Ranking of the product variation in the shop. Returns \"1\" for the first variation, returns \"2\" for the second variation."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates a product variation with the provided variation ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the product variation."
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Variations"
        ]
      }
    },
    "/selections": {
      "get": {
        "summary": "List all product selections",
        "tags": [
          "Selections"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Selection",
                    "type": "object",
                    "description": "Selection model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the product selection, a subset of product variation."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the product selection, a subset of product variation."
                      },
                      "variationId": {
                        "type": "string",
                        "description": "The ID of the related product variation."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-selections",
        "description": "Returns a list of product selections with the provided limit, paging, sorting and filters. By default, selections are returned in sorted order according to their creation order.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "variationId",
            "description": "Filter by product variations by specifying variation ID(s)."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          }
        ]
      },
      "post": {
        "summary": "Create a product selection",
        "operationId": "post-selections",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Selection",
                  "type": "object",
                  "description": "Selection model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product selection, a subset of product variation."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product selection, a subset of product variation."
                    },
                    "variationId": {
                      "type": "string",
                      "description": "The ID of the related product variation."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new product selection.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variationId": {
                    "type": "string",
                    "description": "The ID of the product variation."
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the product selection, a subset of product variation."
                  }
                },
                "required": [
                  "variationId",
                  "title"
                ]
              }
            }
          }
        },
        "tags": [
          "Selections"
        ]
      }
    },
    "/selections/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the selection ID to retrieve the selection."
        }
      ],
      "get": {
        "summary": "Get a product selection",
        "tags": [
          "Selections"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Selection",
                  "type": "object",
                  "description": "Selection model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product selection, a subset of product variation."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product selection, a subset of product variation."
                    },
                    "variationId": {
                      "type": "string",
                      "description": "The ID of the related product variation."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-selections-id",
        "description": "Returns a single product selection with the provided selection ID."
      },
      "put": {
        "summary": "Update a product selection",
        "operationId": "put-selections-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Selection",
                  "type": "object",
                  "description": "Selection model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the product selection, a subset of product variation."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the product selection, a subset of product variation."
                    },
                    "variationId": {
                      "type": "string",
                      "description": "The ID of the related product variation."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates a product selection with the provided selection ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the product selection, a subset of product variation."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Selections"
        ]
      },
      "delete": {
        "summary": "Delete a product selection",
        "operationId": "delete-selections-id",
        "description": "Deletes a product selection with the provided selection ID.",
        "tags": [
          "Selections"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/discounts/codes": {
      "get": {
        "summary": "List all discount codes",
        "tags": [
          "Discounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "DiscountCode",
                    "type": "object",
                    "description": "Discount code model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of discount code."
                      },
                      "code": {
                        "type": "string",
                        "description": "The discount code for the buyers used at the checkout."
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "The date and time for the creation of the discount code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the discount.",
                        "enum": [
                          "amount",
                          "percent"
                        ]
                      },
                      "amountOff": {
                        "type": "string",
                        "description": "The absolute value of the discount amount. Used when the discount code type is \"amount\"."
                      },
                      "percentOff": {
                        "type": "string",
                        "description": "The percentage rate of the discount. Used when the discount code type is \"percent\"."
                      },
                      "amountMinimum": {
                        "type": "string",
                        "description": "Required minimum order amount for the discount code to be applicable. "
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "TRY",
                          "USD",
                          "EUR"
                        ],
                        "description": "Currency of the discount code."
                      },
                      "numAvailable": {
                        "type": "integer",
                        "description": "Number of remaining discount codes that can be used."
                      },
                      "numUsed": {
                        "type": "integer",
                        "description": "Number of times the discount code has been used."
                      },
                      "expiresAt": {
                        "type": "string",
                        "description": "Expiry date of the discount code. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-discounts-codes",
        "description": "Returns a list of discount codes with the provided limit, paging and sorting. By default, discount codes are returned in sorted order, with the most recent discount codes appearing first.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ]
      },
      "post": {
        "summary": "Create a discount code",
        "operationId": "post-discounts-codes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DiscountCode",
                  "type": "object",
                  "description": "Discount code model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of discount code."
                    },
                    "code": {
                      "type": "string",
                      "description": "The discount code for the buyers used at the checkout."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the discount code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the discount.",
                      "enum": [
                        "amount",
                        "percent"
                      ]
                    },
                    "amountOff": {
                      "type": "string",
                      "description": "The absolute value of the discount amount. Used when the discount code type is \"amount\"."
                    },
                    "percentOff": {
                      "type": "string",
                      "description": "The percentage rate of the discount. Used when the discount code type is \"percent\"."
                    },
                    "amountMinimum": {
                      "type": "string",
                      "description": "Required minimum order amount for the discount code to be applicable. "
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the discount code."
                    },
                    "numAvailable": {
                      "type": "integer",
                      "description": "Number of remaining discount codes that can be used."
                    },
                    "numUsed": {
                      "type": "integer",
                      "description": "Number of times the discount code has been used."
                    },
                    "expiresAt": {
                      "type": "string",
                      "description": "Expiry date of the discount code. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new discount code.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The discount code for the buyers used at the checkout."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "amount",
                      "percent"
                    ],
                    "description": "Type of the discount."
                  },
                  "amountOff": {
                    "type": "string",
                    "description": "The absolute value of the discount amount. Required when the discount code type is \"amount\"."
                  },
                  "percentOff": {
                    "type": "string",
                    "description": "The percentage rate of the discount. Required when the discount code type is \"percent\"."
                  },
                  "amountMinimum": {
                    "type": "string",
                    "description": "Required minimum order amount for the discount code to be applicable."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "TRY",
                      "USD",
                      "EUR"
                    ],
                    "description": "Currency of the discount code."
                  },
                  "numAvailable": {
                    "type": "integer",
                    "description": "Number of discount codes that can be used."
                  },
                  "expiresAt": {
                    "type": "string",
                    "description": "Expiry date of the discount code. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                  }
                },
                "required": [
                  "code",
                  "type",
                  "amountMinimum",
                  "currency",
                  "numAvailable",
                  "expiresAt"
                ]
              }
            }
          }
        },
        "tags": [
          "Discounts"
        ]
      }
    },
    "/discounts/codes/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the discount code ID to retrieve the discount code."
        }
      ],
      "get": {
        "summary": "Get a discount code",
        "tags": [
          "Discounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DiscountCode",
                  "type": "object",
                  "description": "Discount code model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of discount code."
                    },
                    "code": {
                      "type": "string",
                      "description": "The discount code for the buyers used at the checkout."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the discount code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the discount.",
                      "enum": [
                        "amount",
                        "percent"
                      ]
                    },
                    "amountOff": {
                      "type": "string",
                      "description": "The absolute value of the discount amount. Used when the discount code type is \"amount\"."
                    },
                    "percentOff": {
                      "type": "string",
                      "description": "The percentage rate of the discount. Used when the discount code type is \"percent\"."
                    },
                    "amountMinimum": {
                      "type": "string",
                      "description": "Required minimum order amount for the discount code to be applicable. "
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the discount code."
                    },
                    "numAvailable": {
                      "type": "integer",
                      "description": "Number of remaining discount codes that can be used."
                    },
                    "numUsed": {
                      "type": "integer",
                      "description": "Number of times the discount code has been used."
                    },
                    "expiresAt": {
                      "type": "string",
                      "description": "Expiry date of the discount code. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-discounts-codes-id",
        "description": "Returns a single discount code with the provided discount code ID."
      },
      "delete": {
        "summary": "Delete a discount code",
        "operationId": "delete-discounts-codes-id",
        "description": "Deletes a discount code with the provided discount code ID.",
        "tags": [
          "Discounts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Update a discount code",
        "operationId": "put-discounts-codes-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DiscountCode",
                  "type": "object",
                  "description": "Discount code model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of discount code."
                    },
                    "code": {
                      "type": "string",
                      "description": "The discount code for the buyers used at the checkout."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the discount code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the discount.",
                      "enum": [
                        "amount",
                        "percent"
                      ]
                    },
                    "amountOff": {
                      "type": "string",
                      "description": "The absolute value of the discount amount. Used when the discount code type is \"amount\"."
                    },
                    "percentOff": {
                      "type": "string",
                      "description": "The percentage rate of the discount. Used when the discount code type is \"percent\"."
                    },
                    "amountMinimum": {
                      "type": "string",
                      "description": "Required minimum order amount for the discount code to be applicable. "
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the discount code."
                    },
                    "numAvailable": {
                      "type": "integer",
                      "description": "Number of remaining discount codes that can be used."
                    },
                    "numUsed": {
                      "type": "integer",
                      "description": "Number of times the discount code has been used."
                    },
                    "expiresAt": {
                      "type": "string",
                      "description": "Expiry date of the discount code. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates a discount code with the provided discount code ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "numAvailable": {
                    "type": "integer",
                    "description": "Number of discount codes that can be used."
                  },
                  "expiresAt": {
                    "type": "string",
                    "description": "Expiry date of the discount code. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Discounts"
        ]
      }
    },
    "/discounts/automatic": {
      "get": {
        "summary": "List all automatic discounts",
        "tags": [
          "Discounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "AutomaticDiscount",
                    "type": "object",
                    "description": "Automatic discount model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the automatic discount."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the automatic discount."
                      },
                      "scope": {
                        "type": "string",
                        "enum": [
                          "all",
                          "selectedProducts",
                          "selectedCategories"
                        ],
                        "description": "The scope of the automatic discount. Automatic discounts can be applied for all or some of the products or categories."
                      },
                      "productIds": {
                        "type": "array",
                        "description": "List of product IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedProducts\".",
                        "items": {
                          "type": "string"
                        }
                      },
                      "categoryIds": {
                        "type": "array",
                        "description": "List of category IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedCategories\".",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "The date and time for the creation of the automatic discount. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the discount.",
                        "enum": [
                          "amount",
                          "percent"
                        ]
                      },
                      "amountOff": {
                        "type": "string",
                        "description": "The absolute value of the discount amount. Used when the automatic discount type is \"amount\"."
                      },
                      "percentOff": {
                        "type": "string",
                        "description": "The percentage rate of the discount. Used when the automatic discount type is \"percent\"."
                      },
                      "requirement": {
                        "type": "string",
                        "enum": [
                          "amount",
                          "quantity"
                        ],
                        "description": "The requirement type of the automatic discount."
                      },
                      "amountMinimum": {
                        "type": "string",
                        "description": "The minimum purchase amount for the automatic discount to be applicable. Used when the automatic discount requirement is \"amount\"."
                      },
                      "quantityMinimum": {
                        "type": "integer",
                        "description": "The minimum number of items to be purchased for the automatic discount to be applicable. Used when the automatic discount requirement is \"quantity\"."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "TRY",
                          "USD",
                          "EUR"
                        ],
                        "description": "Currency of the automatic discount."
                      },
                      "startsAt": {
                        "type": "string",
                        "description": "Start date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                      },
                      "expiresAt": {
                        "type": "string",
                        "description": "Expiry date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-discounts-automatic",
        "description": "Returns a list of automatic discounts with the provided limit, paging and sorting. By default, automatic discounts are returned in sorted order, with the most recent discounts appearing first.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ]
      },
      "post": {
        "summary": "Create an automatic discount",
        "operationId": "post-discounts-automatic",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AutomaticDiscount",
                  "type": "object",
                  "description": "Automatic discount model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the automatic discount."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the automatic discount."
                    },
                    "scope": {
                      "type": "string",
                      "enum": [
                        "all",
                        "selectedProducts",
                        "selectedCategories"
                      ],
                      "description": "The scope of the automatic discount. Automatic discounts can be applied for all or some of the products or categories."
                    },
                    "productIds": {
                      "type": "array",
                      "description": "List of product IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedProducts\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "categoryIds": {
                      "type": "array",
                      "description": "List of category IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedCategories\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the automatic discount. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the discount.",
                      "enum": [
                        "amount",
                        "percent"
                      ]
                    },
                    "amountOff": {
                      "type": "string",
                      "description": "The absolute value of the discount amount. Used when the automatic discount type is \"amount\"."
                    },
                    "percentOff": {
                      "type": "string",
                      "description": "The percentage rate of the discount. Used when the automatic discount type is \"percent\"."
                    },
                    "requirement": {
                      "type": "string",
                      "enum": [
                        "amount",
                        "quantity"
                      ],
                      "description": "The requirement type of the automatic discount."
                    },
                    "amountMinimum": {
                      "type": "string",
                      "description": "The minimum purchase amount for the automatic discount to be applicable. Used when the automatic discount requirement is \"amount\"."
                    },
                    "quantityMinimum": {
                      "type": "integer",
                      "description": "The minimum number of items to be purchased for the automatic discount to be applicable. Used when the automatic discount requirement is \"quantity\"."
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the automatic discount."
                    },
                    "startsAt": {
                      "type": "string",
                      "description": "Start date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    },
                    "expiresAt": {
                      "type": "string",
                      "description": "Expiry date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new automatic discount.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the automatic discount."
                  },
                  "scope": {
                    "type": "string",
                    "enum": [
                      "all",
                      "selectedProducts",
                      "selectedCategories"
                    ],
                    "description": "The scope of the automatic discount. Automatic discounts can be applied for all or some of the products or categories."
                  },
                  "productIds": {
                    "type": "array",
                    "description": "List of product IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedProducts\".",
                    "items": {
                      "type": "string"
                    }
                  },
                  "categoryIds": {
                    "type": "array",
                    "description": "List of category IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedCategories\".",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "percent",
                      "amount"
                    ],
                    "description": "Type of the discount."
                  },
                  "amountOff": {
                    "type": "string",
                    "description": "The absolute value of the discount amount. Used when the automatic discount type is \"amount\"."
                  },
                  "percentOff": {
                    "type": "string",
                    "description": "The percentage rate of the discount. Used when the automatic discount type is \"percent\"."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "TRY",
                      "USD",
                      "EUR"
                    ],
                    "description": "Currency of the automatic discount."
                  },
                  "requirement": {
                    "type": "string",
                    "enum": [
                      "amount",
                      "quantity"
                    ],
                    "description": "The requirement type of the automatic discount."
                  },
                  "amountMinimum": {
                    "type": "string",
                    "description": "The minimum purchase amount for the automatic discount to be applicable. Used when the automatic discount requirement is \"amount\"."
                  },
                  "quantityMinimum": {
                    "type": "integer",
                    "description": "The minimum number of items to be purchased for the automatic discount to be applicable. Used when the automatic discount requirement is \"quantity\"."
                  },
                  "startsAt": {
                    "type": "string",
                    "description": "Start date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                  },
                  "expiresAt": {
                    "type": "string",
                    "description": "Expiry date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                  }
                },
                "required": [
                  "title",
                  "scope",
                  "type",
                  "currency",
                  "requirement",
                  "startsAt",
                  "expiresAt"
                ]
              }
            }
          }
        },
        "tags": [
          "Discounts"
        ]
      }
    },
    "/discounts/automatic/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the automatic discount ID to retrieve the automatic discount."
        }
      ],
      "get": {
        "summary": "Get an automatic discount",
        "tags": [
          "Discounts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AutomaticDiscount",
                  "type": "object",
                  "description": "Automatic discount model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the automatic discount."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the automatic discount."
                    },
                    "scope": {
                      "type": "string",
                      "enum": [
                        "all",
                        "selectedProducts",
                        "selectedCategories"
                      ],
                      "description": "The scope of the automatic discount. Automatic discounts can be applied for all or some of the products or categories."
                    },
                    "productIds": {
                      "type": "array",
                      "description": "List of product IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedProducts\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "categoryIds": {
                      "type": "array",
                      "description": "List of category IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedCategories\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the automatic discount. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the discount.",
                      "enum": [
                        "amount",
                        "percent"
                      ]
                    },
                    "amountOff": {
                      "type": "string",
                      "description": "The absolute value of the discount amount. Used when the automatic discount type is \"amount\"."
                    },
                    "percentOff": {
                      "type": "string",
                      "description": "The percentage rate of the discount. Used when the automatic discount type is \"percent\"."
                    },
                    "requirement": {
                      "type": "string",
                      "enum": [
                        "amount",
                        "quantity"
                      ],
                      "description": "The requirement type of the automatic discount."
                    },
                    "amountMinimum": {
                      "type": "string",
                      "description": "The minimum purchase amount for the automatic discount to be applicable. Used when the automatic discount requirement is \"amount\"."
                    },
                    "quantityMinimum": {
                      "type": "integer",
                      "description": "The minimum number of items to be purchased for the automatic discount to be applicable. Used when the automatic discount requirement is \"quantity\"."
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the automatic discount."
                    },
                    "startsAt": {
                      "type": "string",
                      "description": "Start date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    },
                    "expiresAt": {
                      "type": "string",
                      "description": "Expiry date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-discounts-automatic-id",
        "description": "Returns a single automatic discount with the provided discount ID."
      },
      "put": {
        "summary": "Update an automatic discount",
        "operationId": "put-discounts-automatic-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AutomaticDiscount",
                  "type": "object",
                  "description": "Automatic discount model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the automatic discount."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the automatic discount."
                    },
                    "scope": {
                      "type": "string",
                      "enum": [
                        "all",
                        "selectedProducts",
                        "selectedCategories"
                      ],
                      "description": "The scope of the automatic discount. Automatic discounts can be applied for all or some of the products or categories."
                    },
                    "productIds": {
                      "type": "array",
                      "description": "List of product IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedProducts\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "categoryIds": {
                      "type": "array",
                      "description": "List of category IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedCategories\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the automatic discount. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the discount.",
                      "enum": [
                        "amount",
                        "percent"
                      ]
                    },
                    "amountOff": {
                      "type": "string",
                      "description": "The absolute value of the discount amount. Used when the automatic discount type is \"amount\"."
                    },
                    "percentOff": {
                      "type": "string",
                      "description": "The percentage rate of the discount. Used when the automatic discount type is \"percent\"."
                    },
                    "requirement": {
                      "type": "string",
                      "enum": [
                        "amount",
                        "quantity"
                      ],
                      "description": "The requirement type of the automatic discount."
                    },
                    "amountMinimum": {
                      "type": "string",
                      "description": "The minimum purchase amount for the automatic discount to be applicable. Used when the automatic discount requirement is \"amount\"."
                    },
                    "quantityMinimum": {
                      "type": "integer",
                      "description": "The minimum number of items to be purchased for the automatic discount to be applicable. Used when the automatic discount requirement is \"quantity\"."
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the automatic discount."
                    },
                    "startsAt": {
                      "type": "string",
                      "description": "Start date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    },
                    "expiresAt": {
                      "type": "string",
                      "description": "Expiry date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates an automatic discount with the provided discount ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startsAt": {
                    "type": "string",
                    "description": "Start date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                  },
                  "expiresAt": {
                    "type": "string",
                    "description": "Expiry date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Discounts"
        ]
      },
      "delete": {
        "summary": "Delete an automatic discount",
        "operationId": "delete-discounts-automatic-id",
        "description": "Deletes an automatic discount with the provided discount ID.",
        "tags": [
          "Discounts"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "List all orders",
        "operationId": "get-orders",
        "description": "Returns a list of orders with the provided limit, paging, sorting and filters. By default, orders are returned in sorted order, with the most recent orders appearing first.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Show orders created at or after datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)",
            "name": "dateStart"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Show orders created at or before datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-25T13:24:51+0300)",
            "name": "dateEnd"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "unfulfilled",
                "fulfilled"
              ]
            },
            "in": "query",
            "name": "fulfillmentStatus",
            "description": "Filter by fulfillment status."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "partial",
                "full"
              ]
            },
            "in": "query",
            "name": "refundType",
            "description": "Filter by refund type."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customerEmail",
            "description": "Filter by a customer's email address."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "customerPhone",
            "description": "Filter by a customer's phone number."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Filter by a product by specifying product ID.",
            "name": "productId"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Order",
                    "type": "object",
                    "description": "Order model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the order."
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "fulfilled",
                          "unfulfilled"
                        ],
                        "description": "Current fulfillment status of the order."
                      },
                      "paymentStatus": {
                        "type": "string",
                        "description": "Current payment status of the order (Currently only paid orders are in scope, unpaid is reserved for future use).",
                        "enum": [
                          "paid",
                          "unpaid"
                        ]
                      },
                      "installments": {
                        "type": "boolean",
                        "description": "Returns true if the payment is done in installments."
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "The date and time for the creation of the order. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "TRY",
                          "USD",
                          "EUR"
                        ],
                        "description": "Currency of the order."
                      },
                      "paymentMethod": {
                        "type": "string",
                        "enum": [
                          "debitCard",
                          "creditCard"
                        ],
                        "description": "Buyer's method of payment."
                      },
                      "totals": {
                        "type": "object",
                        "description": "The total amounts for all order line items.",
                        "properties": {
                          "subtotal": {
                            "type": "string",
                            "description": "Subtotal amount for all the products and/or services sold."
                          },
                          "shipping": {
                            "type": "string",
                            "description": "Shipping amount of the order."
                          },
                          "discount": {
                            "type": "string",
                            "description": "Discount amount of the order."
                          },
                          "total": {
                            "type": "string",
                            "description": "Grand total amount of the order."
                          }
                        }
                      },
                      "discounts": {
                        "type": "array",
                        "description": "Details of the discounts applied.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of the discount."
                            },
                            "method": {
                              "type": "string",
                              "enum": [
                                "discountCode",
                                "automaticDiscount"
                              ],
                              "description": "Discount method."
                            }
                          }
                        }
                      },
                      "shippingInfo": {
                        "type": "object",
                        "description": "Buyer's shipping address and details.",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "Buyer's first name for shipping."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Buyer's last name for shipping."
                          },
                          "nationalId": {
                            "type": "string",
                            "description": "Buyer's national identification number for shipping."
                          },
                          "email": {
                            "type": "string",
                            "description": "Buyer's email address for shipping."
                          },
                          "phone": {
                            "type": "string",
                            "description": "Buyer's phone number for shipping."
                          },
                          "company": {
                            "type": "string",
                            "description": "Buyer company's name for shipping."
                          },
                          "address": {
                            "type": "string",
                            "description": "Buyer's physical address for shipping."
                          },
                          "district": {
                            "type": "string",
                            "description": "Buyer's district for shipping."
                          },
                          "city": {
                            "type": "string",
                            "description": "Buyer's city for shipping."
                          },
                          "state": {
                            "type": "string",
                            "description": "Buyer's state for shipping."
                          },
                          "postcode": {
                            "type": "string",
                            "description": "Buyer's postcode for shipping."
                          },
                          "country": {
                            "type": "string",
                            "description": "Buyer's country for shipping."
                          }
                        }
                      },
                      "billingInfo": {
                        "type": "object",
                        "description": "Buyer's billing address and details. Separate billing information can only be present if the seller uses a special purpose app to collect this information. ",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "Buyer's first name for billing."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Buyer's last name for billing."
                          },
                          "nationalId": {
                            "type": "string",
                            "description": "Buyer's national identification number for billing."
                          },
                          "email": {
                            "type": "string",
                            "description": "Buyer's email address for billing."
                          },
                          "phone": {
                            "type": "string",
                            "description": "Buyer's phone number for billing."
                          },
                          "company": {
                            "type": "string",
                            "description": "Buyer company's name for billing."
                          },
                          "taxOffice": {
                            "type": "string",
                            "description": "Buyer company's tax office name for billing."
                          },
                          "taxNumber": {
                            "type": "string",
                            "description": "Buyer company's tax number for billing."
                          },
                          "address": {
                            "type": "string",
                            "description": "Buyer's physical address for billing."
                          },
                          "district": {
                            "type": "string",
                            "description": "Buyer's district for billing."
                          },
                          "city": {
                            "type": "string",
                            "description": "Buyer's city for billing."
                          },
                          "state": {
                            "type": "string",
                            "description": "Buyer's state for billing."
                          },
                          "postcode": {
                            "type": "string",
                            "description": "Buyer's postcode for billing."
                          },
                          "country": {
                            "type": "string",
                            "description": "Buyer's country for billing."
                          }
                        }
                      },
                      "note": {
                        "type": "string",
                        "description": "Buyer's order note."
                      },
                      "lineItems": {
                        "type": "array",
                        "description": "Order line items for all the products and/or services sold.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "type": "string",
                              "description": "The ID of the product."
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the product."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the product.",
                              "enum": [
                                "physical",
                                "digital"
                              ]
                            },
                            "selection": {
                              "type": "array",
                              "description": "Selection details of the product sold.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the product's selection, a subset of product's variation."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the product's selection, a subset of product's variation."
                                  },
                                  "variationTitle": {
                                    "type": "string",
                                    "description": "The title of the main product variation."
                                  }
                                }
                              }
                            },
                            "options": {
                              "type": "array",
                              "description": "Option details of the product.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ID of the product's option."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the product's option."
                                  }
                                }
                              }
                            },
                            "quantity": {
                              "type": "integer",
                              "description": "Quantity ordered."
                            },
                            "price": {
                              "type": "string",
                              "description": "Unit price of the product."
                            },
                            "total": {
                              "type": "string",
                              "description": "Total price of the order line item."
                            }
                          }
                        }
                      },
                      "fulfillments": {
                        "type": "array",
                        "description": "Details of the order fulfillments. Direction of fulfillments is seller to buyer.",
                        "items": {
                          "title": "Shipping",
                          "type": "object",
                          "description": "Shipping model.",
                          "properties": {
                            "orderId": {
                              "type": "string",
                              "description": "The ID of the order."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "shipped",
                                "notShipped"
                              ],
                              "description": "Current status of the shipping."
                            },
                            "method": {
                              "type": "string",
                              "enum": [
                                "standard",
                                "contracted"
                              ],
                              "description": "Method of the shipping."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "firstShipment",
                                "secondShipment",
                                "returnShipment"
                              ],
                              "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                            },
                            "dateCreated": {
                              "type": "string",
                              "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                            },
                            "dateDispatched": {
                              "type": "string",
                              "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                            },
                            "company": {
                              "type": "string",
                              "enum": [
                                "yurtici",
                                "mng",
                                "ptt",
                                "aras",
                                "surat",
                                "ups",
                                "fedex",
                                "dhl",
                                "tnt",
                                "pts",
                                "aramex",
                                "interGlobal",
                                "other"
                              ],
                              "description": "Shipping company."
                            },
                            "code": {
                              "type": "string",
                              "description": "Generated shipping code. "
                            },
                            "trackingNumber": {
                              "type": "string",
                              "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                            },
                            "trackingUrl": {
                              "type": "string",
                              "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                            },
                            "size": {
                              "type": "string",
                              "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                            },
                            "sizeUnit": {
                              "type": "string",
                              "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                              "enum": [
                                "deci"
                              ]
                            },
                            "weight": {
                              "type": "string",
                              "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                            },
                            "weightUnit": {
                              "type": "string",
                              "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                              "enum": [
                                "gram",
                                "kilogram"
                              ]
                            },
                            "cost": {
                              "type": "string",
                              "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "TRY",
                                "USD",
                                "EUR"
                              ],
                              "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                            }
                          }
                        }
                      },
                      "returns": {
                        "type": "array",
                        "description": "Details of the order returns. Direction of returns is buyer to seller.",
                        "items": {
                          "title": "Shipping",
                          "type": "object",
                          "description": "Shipping model.",
                          "properties": {
                            "orderId": {
                              "type": "string",
                              "description": "The ID of the order."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "shipped",
                                "notShipped"
                              ],
                              "description": "Current status of the shipping."
                            },
                            "method": {
                              "type": "string",
                              "enum": [
                                "standard",
                                "contracted"
                              ],
                              "description": "Method of the shipping."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "firstShipment",
                                "secondShipment",
                                "returnShipment"
                              ],
                              "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                            },
                            "dateCreated": {
                              "type": "string",
                              "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                            },
                            "dateDispatched": {
                              "type": "string",
                              "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                            },
                            "company": {
                              "type": "string",
                              "enum": [
                                "yurtici",
                                "mng",
                                "ptt",
                                "aras",
                                "surat",
                                "ups",
                                "fedex",
                                "dhl",
                                "tnt",
                                "pts",
                                "aramex",
                                "interGlobal",
                                "other"
                              ],
                              "description": "Shipping company."
                            },
                            "code": {
                              "type": "string",
                              "description": "Generated shipping code. "
                            },
                            "trackingNumber": {
                              "type": "string",
                              "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                            },
                            "trackingUrl": {
                              "type": "string",
                              "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                            },
                            "size": {
                              "type": "string",
                              "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                            },
                            "sizeUnit": {
                              "type": "string",
                              "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                              "enum": [
                                "deci"
                              ]
                            },
                            "weight": {
                              "type": "string",
                              "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                            },
                            "weightUnit": {
                              "type": "string",
                              "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                              "enum": [
                                "gram",
                                "kilogram"
                              ]
                            },
                            "cost": {
                              "type": "string",
                              "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                            },
                            "currency": {
                              "type": "string",
                              "enum": [
                                "TRY",
                                "USD",
                                "EUR"
                              ],
                              "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                            }
                          }
                        }
                      },
                      "refunds": {
                        "type": "array",
                        "description": "Details of the refunds issued.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The ID of the refund."
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "full",
                                "partial"
                              ],
                              "description": "The type of the refund."
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "failed",
                                "succeeded"
                              ],
                              "description": "Current status of the refund."
                            },
                            "dateCreated": {
                              "type": "string",
                              "description": "The date and time for the creation of the refund request. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                            },
                            "dateRefunded": {
                              "type": "string",
                              "description": "The date and time for the actual refund transaction submitted to the payment provider. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                            },
                            "total": {
                              "type": "string",
                              "description": "Total amount of the refund."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Get an order",
        "operationId": "get-orders-id",
        "description": "Returns a single order with the provided order ID.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Order",
                  "type": "object",
                  "description": "Order model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the order."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "fulfilled",
                        "unfulfilled"
                      ],
                      "description": "Current fulfillment status of the order."
                    },
                    "paymentStatus": {
                      "type": "string",
                      "description": "Current payment status of the order (Currently only paid orders are in scope, unpaid is reserved for future use).",
                      "enum": [
                        "paid",
                        "unpaid"
                      ]
                    },
                    "installments": {
                      "type": "boolean",
                      "description": "Returns true if the payment is done in installments."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the order. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the order."
                    },
                    "paymentMethod": {
                      "type": "string",
                      "enum": [
                        "debitCard",
                        "creditCard"
                      ],
                      "description": "Buyer's method of payment."
                    },
                    "totals": {
                      "type": "object",
                      "description": "The total amounts for all order line items.",
                      "properties": {
                        "subtotal": {
                          "type": "string",
                          "description": "Subtotal amount for all the products and/or services sold."
                        },
                        "shipping": {
                          "type": "string",
                          "description": "Shipping amount of the order."
                        },
                        "discount": {
                          "type": "string",
                          "description": "Discount amount of the order."
                        },
                        "total": {
                          "type": "string",
                          "description": "Grand total amount of the order."
                        }
                      }
                    },
                    "discounts": {
                      "type": "array",
                      "description": "Details of the discounts applied.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the discount."
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "discountCode",
                              "automaticDiscount"
                            ],
                            "description": "Discount method."
                          }
                        }
                      }
                    },
                    "shippingInfo": {
                      "type": "object",
                      "description": "Buyer's shipping address and details.",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "Buyer's first name for shipping."
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Buyer's last name for shipping."
                        },
                        "nationalId": {
                          "type": "string",
                          "description": "Buyer's national identification number for shipping."
                        },
                        "email": {
                          "type": "string",
                          "description": "Buyer's email address for shipping."
                        },
                        "phone": {
                          "type": "string",
                          "description": "Buyer's phone number for shipping."
                        },
                        "company": {
                          "type": "string",
                          "description": "Buyer company's name for shipping."
                        },
                        "address": {
                          "type": "string",
                          "description": "Buyer's physical address for shipping."
                        },
                        "district": {
                          "type": "string",
                          "description": "Buyer's district for shipping."
                        },
                        "city": {
                          "type": "string",
                          "description": "Buyer's city for shipping."
                        },
                        "state": {
                          "type": "string",
                          "description": "Buyer's state for shipping."
                        },
                        "postcode": {
                          "type": "string",
                          "description": "Buyer's postcode for shipping."
                        },
                        "country": {
                          "type": "string",
                          "description": "Buyer's country for shipping."
                        }
                      }
                    },
                    "billingInfo": {
                      "type": "object",
                      "description": "Buyer's billing address and details. Separate billing information can only be present if the seller uses a special purpose app to collect this information. ",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "Buyer's first name for billing."
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Buyer's last name for billing."
                        },
                        "nationalId": {
                          "type": "string",
                          "description": "Buyer's national identification number for billing."
                        },
                        "email": {
                          "type": "string",
                          "description": "Buyer's email address for billing."
                        },
                        "phone": {
                          "type": "string",
                          "description": "Buyer's phone number for billing."
                        },
                        "company": {
                          "type": "string",
                          "description": "Buyer company's name for billing."
                        },
                        "taxOffice": {
                          "type": "string",
                          "description": "Buyer company's tax office name for billing."
                        },
                        "taxNumber": {
                          "type": "string",
                          "description": "Buyer company's tax number for billing."
                        },
                        "address": {
                          "type": "string",
                          "description": "Buyer's physical address for billing."
                        },
                        "district": {
                          "type": "string",
                          "description": "Buyer's district for billing."
                        },
                        "city": {
                          "type": "string",
                          "description": "Buyer's city for billing."
                        },
                        "state": {
                          "type": "string",
                          "description": "Buyer's state for billing."
                        },
                        "postcode": {
                          "type": "string",
                          "description": "Buyer's postcode for billing."
                        },
                        "country": {
                          "type": "string",
                          "description": "Buyer's country for billing."
                        }
                      }
                    },
                    "note": {
                      "type": "string",
                      "description": "Buyer's order note."
                    },
                    "lineItems": {
                      "type": "array",
                      "description": "Order line items for all the products and/or services sold.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "string",
                            "description": "The ID of the product."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the product."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the product.",
                            "enum": [
                              "physical",
                              "digital"
                            ]
                          },
                          "selection": {
                            "type": "array",
                            "description": "Selection details of the product sold.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the product's selection, a subset of product's variation."
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the product's selection, a subset of product's variation."
                                },
                                "variationTitle": {
                                  "type": "string",
                                  "description": "The title of the main product variation."
                                }
                              }
                            }
                          },
                          "options": {
                            "type": "array",
                            "description": "Option details of the product.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the product's option."
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the product's option."
                                }
                              }
                            }
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "Quantity ordered."
                          },
                          "price": {
                            "type": "string",
                            "description": "Unit price of the product."
                          },
                          "total": {
                            "type": "string",
                            "description": "Total price of the order line item."
                          }
                        }
                      }
                    },
                    "fulfillments": {
                      "type": "array",
                      "description": "Details of the order fulfillments. Direction of fulfillments is seller to buyer.",
                      "items": {
                        "title": "Shipping",
                        "type": "object",
                        "description": "Shipping model.",
                        "properties": {
                          "orderId": {
                            "type": "string",
                            "description": "The ID of the order."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "shipped",
                              "notShipped"
                            ],
                            "description": "Current status of the shipping."
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "standard",
                              "contracted"
                            ],
                            "description": "Method of the shipping."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "firstShipment",
                              "secondShipment",
                              "returnShipment"
                            ],
                            "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                          },
                          "dateCreated": {
                            "type": "string",
                            "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "dateDispatched": {
                            "type": "string",
                            "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "company": {
                            "type": "string",
                            "enum": [
                              "yurtici",
                              "mng",
                              "ptt",
                              "aras",
                              "surat",
                              "ups",
                              "fedex",
                              "dhl",
                              "tnt",
                              "pts",
                              "aramex",
                              "interGlobal",
                              "other"
                            ],
                            "description": "Shipping company."
                          },
                          "code": {
                            "type": "string",
                            "description": "Generated shipping code. "
                          },
                          "trackingNumber": {
                            "type": "string",
                            "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                          },
                          "trackingUrl": {
                            "type": "string",
                            "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                          },
                          "size": {
                            "type": "string",
                            "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                          },
                          "sizeUnit": {
                            "type": "string",
                            "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                            "enum": [
                              "deci"
                            ]
                          },
                          "weight": {
                            "type": "string",
                            "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                          },
                          "weightUnit": {
                            "type": "string",
                            "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                            "enum": [
                              "gram",
                              "kilogram"
                            ]
                          },
                          "cost": {
                            "type": "string",
                            "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                          }
                        }
                      }
                    },
                    "returns": {
                      "type": "array",
                      "description": "Details of the order returns. Direction of returns is buyer to seller.",
                      "items": {
                        "title": "Shipping",
                        "type": "object",
                        "description": "Shipping model.",
                        "properties": {
                          "orderId": {
                            "type": "string",
                            "description": "The ID of the order."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "shipped",
                              "notShipped"
                            ],
                            "description": "Current status of the shipping."
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "standard",
                              "contracted"
                            ],
                            "description": "Method of the shipping."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "firstShipment",
                              "secondShipment",
                              "returnShipment"
                            ],
                            "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                          },
                          "dateCreated": {
                            "type": "string",
                            "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "dateDispatched": {
                            "type": "string",
                            "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "company": {
                            "type": "string",
                            "enum": [
                              "yurtici",
                              "mng",
                              "ptt",
                              "aras",
                              "surat",
                              "ups",
                              "fedex",
                              "dhl",
                              "tnt",
                              "pts",
                              "aramex",
                              "interGlobal",
                              "other"
                            ],
                            "description": "Shipping company."
                          },
                          "code": {
                            "type": "string",
                            "description": "Generated shipping code. "
                          },
                          "trackingNumber": {
                            "type": "string",
                            "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                          },
                          "trackingUrl": {
                            "type": "string",
                            "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                          },
                          "size": {
                            "type": "string",
                            "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                          },
                          "sizeUnit": {
                            "type": "string",
                            "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                            "enum": [
                              "deci"
                            ]
                          },
                          "weight": {
                            "type": "string",
                            "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                          },
                          "weightUnit": {
                            "type": "string",
                            "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                            "enum": [
                              "gram",
                              "kilogram"
                            ]
                          },
                          "cost": {
                            "type": "string",
                            "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                          }
                        }
                      }
                    },
                    "refunds": {
                      "type": "array",
                      "description": "Details of the refunds issued.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the refund."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "full",
                              "partial"
                            ],
                            "description": "The type of the refund."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "failed",
                              "succeeded"
                            ],
                            "description": "Current status of the refund."
                          },
                          "dateCreated": {
                            "type": "string",
                            "description": "The date and time for the creation of the refund request. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "dateRefunded": {
                            "type": "string",
                            "description": "The date and time for the actual refund transaction submitted to the payment provider. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "total": {
                            "type": "string",
                            "description": "Total amount of the refund."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the order ID to retrieve the order."
        }
      ],
      "put": {
        "summary": "Update an order",
        "operationId": "put-orders-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Order",
                  "type": "object",
                  "description": "Order model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the order."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "fulfilled",
                        "unfulfilled"
                      ],
                      "description": "Current fulfillment status of the order."
                    },
                    "paymentStatus": {
                      "type": "string",
                      "description": "Current payment status of the order (Currently only paid orders are in scope, unpaid is reserved for future use).",
                      "enum": [
                        "paid",
                        "unpaid"
                      ]
                    },
                    "installments": {
                      "type": "boolean",
                      "description": "Returns true if the payment is done in installments."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the order. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the order."
                    },
                    "paymentMethod": {
                      "type": "string",
                      "enum": [
                        "debitCard",
                        "creditCard"
                      ],
                      "description": "Buyer's method of payment."
                    },
                    "totals": {
                      "type": "object",
                      "description": "The total amounts for all order line items.",
                      "properties": {
                        "subtotal": {
                          "type": "string",
                          "description": "Subtotal amount for all the products and/or services sold."
                        },
                        "shipping": {
                          "type": "string",
                          "description": "Shipping amount of the order."
                        },
                        "discount": {
                          "type": "string",
                          "description": "Discount amount of the order."
                        },
                        "total": {
                          "type": "string",
                          "description": "Grand total amount of the order."
                        }
                      }
                    },
                    "discounts": {
                      "type": "array",
                      "description": "Details of the discounts applied.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the discount."
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "discountCode",
                              "automaticDiscount"
                            ],
                            "description": "Discount method."
                          }
                        }
                      }
                    },
                    "shippingInfo": {
                      "type": "object",
                      "description": "Buyer's shipping address and details.",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "Buyer's first name for shipping."
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Buyer's last name for shipping."
                        },
                        "nationalId": {
                          "type": "string",
                          "description": "Buyer's national identification number for shipping."
                        },
                        "email": {
                          "type": "string",
                          "description": "Buyer's email address for shipping."
                        },
                        "phone": {
                          "type": "string",
                          "description": "Buyer's phone number for shipping."
                        },
                        "company": {
                          "type": "string",
                          "description": "Buyer company's name for shipping."
                        },
                        "address": {
                          "type": "string",
                          "description": "Buyer's physical address for shipping."
                        },
                        "district": {
                          "type": "string",
                          "description": "Buyer's district for shipping."
                        },
                        "city": {
                          "type": "string",
                          "description": "Buyer's city for shipping."
                        },
                        "state": {
                          "type": "string",
                          "description": "Buyer's state for shipping."
                        },
                        "postcode": {
                          "type": "string",
                          "description": "Buyer's postcode for shipping."
                        },
                        "country": {
                          "type": "string",
                          "description": "Buyer's country for shipping."
                        }
                      }
                    },
                    "billingInfo": {
                      "type": "object",
                      "description": "Buyer's billing address and details. Separate billing information can only be present if the seller uses a special purpose app to collect this information. ",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "Buyer's first name for billing."
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Buyer's last name for billing."
                        },
                        "nationalId": {
                          "type": "string",
                          "description": "Buyer's national identification number for billing."
                        },
                        "email": {
                          "type": "string",
                          "description": "Buyer's email address for billing."
                        },
                        "phone": {
                          "type": "string",
                          "description": "Buyer's phone number for billing."
                        },
                        "company": {
                          "type": "string",
                          "description": "Buyer company's name for billing."
                        },
                        "taxOffice": {
                          "type": "string",
                          "description": "Buyer company's tax office name for billing."
                        },
                        "taxNumber": {
                          "type": "string",
                          "description": "Buyer company's tax number for billing."
                        },
                        "address": {
                          "type": "string",
                          "description": "Buyer's physical address for billing."
                        },
                        "district": {
                          "type": "string",
                          "description": "Buyer's district for billing."
                        },
                        "city": {
                          "type": "string",
                          "description": "Buyer's city for billing."
                        },
                        "state": {
                          "type": "string",
                          "description": "Buyer's state for billing."
                        },
                        "postcode": {
                          "type": "string",
                          "description": "Buyer's postcode for billing."
                        },
                        "country": {
                          "type": "string",
                          "description": "Buyer's country for billing."
                        }
                      }
                    },
                    "note": {
                      "type": "string",
                      "description": "Buyer's order note."
                    },
                    "lineItems": {
                      "type": "array",
                      "description": "Order line items for all the products and/or services sold.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "string",
                            "description": "The ID of the product."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the product."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the product.",
                            "enum": [
                              "physical",
                              "digital"
                            ]
                          },
                          "selection": {
                            "type": "array",
                            "description": "Selection details of the product sold.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the product's selection, a subset of product's variation."
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the product's selection, a subset of product's variation."
                                },
                                "variationTitle": {
                                  "type": "string",
                                  "description": "The title of the main product variation."
                                }
                              }
                            }
                          },
                          "options": {
                            "type": "array",
                            "description": "Option details of the product.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the product's option."
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the product's option."
                                }
                              }
                            }
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "Quantity ordered."
                          },
                          "price": {
                            "type": "string",
                            "description": "Unit price of the product."
                          },
                          "total": {
                            "type": "string",
                            "description": "Total price of the order line item."
                          }
                        }
                      }
                    },
                    "fulfillments": {
                      "type": "array",
                      "description": "Details of the order fulfillments. Direction of fulfillments is seller to buyer.",
                      "items": {
                        "title": "Shipping",
                        "type": "object",
                        "description": "Shipping model.",
                        "properties": {
                          "orderId": {
                            "type": "string",
                            "description": "The ID of the order."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "shipped",
                              "notShipped"
                            ],
                            "description": "Current status of the shipping."
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "standard",
                              "contracted"
                            ],
                            "description": "Method of the shipping."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "firstShipment",
                              "secondShipment",
                              "returnShipment"
                            ],
                            "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                          },
                          "dateCreated": {
                            "type": "string",
                            "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "dateDispatched": {
                            "type": "string",
                            "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "company": {
                            "type": "string",
                            "enum": [
                              "yurtici",
                              "mng",
                              "ptt",
                              "aras",
                              "surat",
                              "ups",
                              "fedex",
                              "dhl",
                              "tnt",
                              "pts",
                              "aramex",
                              "interGlobal",
                              "other"
                            ],
                            "description": "Shipping company."
                          },
                          "code": {
                            "type": "string",
                            "description": "Generated shipping code. "
                          },
                          "trackingNumber": {
                            "type": "string",
                            "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                          },
                          "trackingUrl": {
                            "type": "string",
                            "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                          },
                          "size": {
                            "type": "string",
                            "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                          },
                          "sizeUnit": {
                            "type": "string",
                            "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                            "enum": [
                              "deci"
                            ]
                          },
                          "weight": {
                            "type": "string",
                            "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                          },
                          "weightUnit": {
                            "type": "string",
                            "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                            "enum": [
                              "gram",
                              "kilogram"
                            ]
                          },
                          "cost": {
                            "type": "string",
                            "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                          }
                        }
                      }
                    },
                    "returns": {
                      "type": "array",
                      "description": "Details of the order returns. Direction of returns is buyer to seller.",
                      "items": {
                        "title": "Shipping",
                        "type": "object",
                        "description": "Shipping model.",
                        "properties": {
                          "orderId": {
                            "type": "string",
                            "description": "The ID of the order."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "shipped",
                              "notShipped"
                            ],
                            "description": "Current status of the shipping."
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "standard",
                              "contracted"
                            ],
                            "description": "Method of the shipping."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "firstShipment",
                              "secondShipment",
                              "returnShipment"
                            ],
                            "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                          },
                          "dateCreated": {
                            "type": "string",
                            "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "dateDispatched": {
                            "type": "string",
                            "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "company": {
                            "type": "string",
                            "enum": [
                              "yurtici",
                              "mng",
                              "ptt",
                              "aras",
                              "surat",
                              "ups",
                              "fedex",
                              "dhl",
                              "tnt",
                              "pts",
                              "aramex",
                              "interGlobal",
                              "other"
                            ],
                            "description": "Shipping company."
                          },
                          "code": {
                            "type": "string",
                            "description": "Generated shipping code. "
                          },
                          "trackingNumber": {
                            "type": "string",
                            "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                          },
                          "trackingUrl": {
                            "type": "string",
                            "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                          },
                          "size": {
                            "type": "string",
                            "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                          },
                          "sizeUnit": {
                            "type": "string",
                            "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                            "enum": [
                              "deci"
                            ]
                          },
                          "weight": {
                            "type": "string",
                            "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                          },
                          "weightUnit": {
                            "type": "string",
                            "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                            "enum": [
                              "gram",
                              "kilogram"
                            ]
                          },
                          "cost": {
                            "type": "string",
                            "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                          },
                          "currency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                          }
                        }
                      }
                    },
                    "refunds": {
                      "type": "array",
                      "description": "Details of the refunds issued.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the refund."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "full",
                              "partial"
                            ],
                            "description": "The type of the refund."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "failed",
                              "succeeded"
                            ],
                            "description": "Current status of the refund."
                          },
                          "dateCreated": {
                            "type": "string",
                            "description": "The date and time for the creation of the refund request. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "dateRefunded": {
                            "type": "string",
                            "description": "The date and time for the actual refund transaction submitted to the payment provider. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                          },
                          "total": {
                            "type": "string",
                            "description": "Total amount of the refund."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates an order with the provided order ID. Used for closing the order and/or changing the shipping address.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fulfillments": {
                    "type": "object",
                    "description": "Details of the delivery.",
                    "properties": {
                      "productType": {
                        "type": "string",
                        "enum": [
                          "physical",
                          "digital"
                        ],
                        "description": "Type of the delivery."
                      },
                      "shippingCompany": {
                        "type": "string",
                        "enum": [
                          "yurtici",
                          "mng",
                          "ptt",
                          "aras",
                          "surat",
                          "ups",
                          "fedex",
                          "dhl",
                          "tnt",
                          "pts",
                          "aramex",
                          "interGlobal",
                          "other"
                        ],
                        "description": "Shipping company used for the delivery."
                      },
                      "trackingNumber": {
                        "type": "string",
                        "description": "Tracking number of the shipping."
                      },
                      "note": {
                        "type": "string",
                        "description": "Required for digital deliveries, represents how the delivery is done."
                      }
                    }
                  },
                  "shippingInfo": {
                    "type": "object",
                    "description": "Buyer's shipping address and details.",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "Buyer's first name for shipping."
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Buyer's last name for shipping."
                      },
                      "nationalId": {
                        "type": "string",
                        "description": "Buyer's national identification number for shipping."
                      },
                      "email": {
                        "type": "string",
                        "description": "Buyer's email address for shipping."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Buyer's phone number for shipping."
                      },
                      "company": {
                        "type": "string",
                        "description": "Buyer company's name for shipping."
                      },
                      "address": {
                        "type": "string",
                        "description": "Buyer's physical address for shipping."
                      },
                      "district": {
                        "type": "string",
                        "description": "Buyer's district for shipping."
                      },
                      "city": {
                        "type": "string",
                        "description": "Buyer's city for shipping."
                      },
                      "state": {
                        "type": "string",
                        "description": "Buyer's state for shipping."
                      },
                      "postcode": {
                        "type": "string",
                        "description": "Buyer's postcode for shipping."
                      },
                      "country": {
                        "type": "string",
                        "description": "Buyer's country for shipping."
                      }
                    }
                  }
                }
              },
              "examples": {}
            }
          },
          "description": "To close an order, provide fulfillments parameters.\nTo change the shipping address of an order, provide shippingInfo parameters."
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/orders/transactions/{orderId}": {
      "get": {
        "summary": "Get an order transaction",
        "operationId": "get-orders-transactions-orderId",
        "description": "Returns the order transaction with the provided order ID. Used for collecting additional financial information about the order.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Transaction",
                  "type": "object",
                  "description": "Transaction model.",
                  "properties": {
                    "orderId": {
                      "type": "string",
                      "description": "The ID of the order."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "charge",
                        "adjustment"
                      ],
                      "description": "Type of the transaction."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the transaction."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the transaction. yyyy-MM-ddTHH:mm:ssZ format is used (e.g. 2022-07-21T13:24:51+0300)."
                    },
                    "gross": {
                      "type": "object",
                      "description": "The gross amounts of the transaction.",
                      "properties": {
                        "originCurrency": {
                          "type": "string",
                          "description": "Origin currency of the transaction.",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ]
                        },
                        "originAmount": {
                          "type": "string",
                          "description": "Total origin amount paid by the buyer."
                        },
                        "payoutCurrency": {
                          "type": "string",
                          "description": "Payout currency of the transaction.",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ]
                        },
                        "payoutAmount": {
                          "type": "string",
                          "description": "Gross payout amount. Fees will be deducted from this during payout. "
                        },
                        "exchangeRate": {
                          "type": "string",
                          "description": "Exchange rate used for the transaction if the originCurrency and payoutCurrency are different. Returns \"1\" if these currencies are same."
                        }
                      }
                    },
                    "fee": {
                      "type": "array",
                      "description": "Total fees of the transaction.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "currency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Fee currency of the transaction."
                          },
                          "amount": {
                            "type": "string",
                            "description": "Total fee amount of the transaction for the returned currency."
                          }
                        }
                      }
                    },
                    "feeDetails": {
                      "type": "array",
                      "description": "Details of fee(s) of the transaction.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "serviceFee",
                              "shippingFee",
                              "vat",
                              "wht"
                            ],
                            "description": "Type of the single fee item."
                          },
                          "currency": {
                            "type": "string",
                            "description": "Fee currency of the single fee item.",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Fee amount of the single fee item."
                          }
                        }
                      }
                    },
                    "installments": {
                      "type": "object",
                      "description": "Returns the details of installment payments. Returns empty in case of an advance payment.",
                      "properties": {
                        "term": {
                          "type": "integer",
                          "description": "Installment term in months."
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of the interest cost.",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ]
                        },
                        "interestCost": {
                          "type": "string",
                          "description": "Total interest cost over the term of installments."
                        },
                        "costBearer": {
                          "type": "string",
                          "enum": [
                            "buyer",
                            "seller"
                          ],
                          "description": "Bearer of the interest cost."
                        }
                      }
                    },
                    "net": {
                      "type": "array",
                      "description": "The net amount of the transaction. ",
                      "items": {
                        "type": "object",
                        "properties": {
                          "payoutCurrency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Payout currency of the transaction."
                          },
                          "payoutAmount": {
                            "type": "string",
                            "description": "Net payout amount. Fees are already deducted to calculate net payout amount."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/shippings": {
      "get": {
        "summary": "List all shippings",
        "tags": [
          "Shippings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Shipping",
                    "type": "object",
                    "description": "Shipping model.",
                    "properties": {
                      "orderId": {
                        "type": "string",
                        "description": "The ID of the order."
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "shipped",
                          "notShipped"
                        ],
                        "description": "Current status of the shipping."
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "standard",
                          "contracted"
                        ],
                        "description": "Method of the shipping."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "firstShipment",
                          "secondShipment",
                          "returnShipment"
                        ],
                        "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "dateDispatched": {
                        "type": "string",
                        "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "company": {
                        "type": "string",
                        "enum": [
                          "yurtici",
                          "mng",
                          "ptt",
                          "aras",
                          "surat",
                          "ups",
                          "fedex",
                          "dhl",
                          "tnt",
                          "pts",
                          "aramex",
                          "interGlobal",
                          "other"
                        ],
                        "description": "Shipping company."
                      },
                      "code": {
                        "type": "string",
                        "description": "Generated shipping code. "
                      },
                      "trackingNumber": {
                        "type": "string",
                        "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                      },
                      "trackingUrl": {
                        "type": "string",
                        "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                      },
                      "size": {
                        "type": "string",
                        "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                      },
                      "sizeUnit": {
                        "type": "string",
                        "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                        "enum": [
                          "deci"
                        ]
                      },
                      "weight": {
                        "type": "string",
                        "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                      },
                      "weightUnit": {
                        "type": "string",
                        "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                        "enum": [
                          "gram",
                          "kilogram"
                        ]
                      },
                      "cost": {
                        "type": "string",
                        "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "TRY",
                          "USD",
                          "EUR"
                        ],
                        "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-shippings",
        "description": "Returns a list of Shopier Contracted Shippings with the provided limit, paging, sorting and filters. By default, shippings are returned in sorted order, with the recently created shipping codes appearing first.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "shipped",
                "notShipped"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Filter by a shipping status."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "firstShipment",
                "secondShipment",
                "returnShipment"
              ]
            },
            "in": "query",
            "name": "type",
            "description": "Filter by a shipping type."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "yurtici",
                "mng",
                "ptt"
              ]
            },
            "in": "query",
            "name": "company",
            "description": "Filter by a shipping company."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateCreatedStart",
            "description": "Show shipping codes that are created at or after datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateCreatedEnd",
            "description": "Show shipping codes that are created at or before datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-25T13:24:51+0300)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateDispatchedStart",
            "description": "Show shippings that are dispatched at or after datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateDispatchedEnd",
            "description": "Show shippings that are dispatched at or before datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-25T13:24:51+0300)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ]
      },
      "post": {
        "summary": "Create a shipping code",
        "operationId": "post-shippings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Shipping",
                  "type": "object",
                  "description": "Shipping model.",
                  "properties": {
                    "orderId": {
                      "type": "string",
                      "description": "The ID of the order."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "shipped",
                        "notShipped"
                      ],
                      "description": "Current status of the shipping."
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "standard",
                        "contracted"
                      ],
                      "description": "Method of the shipping."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "firstShipment",
                        "secondShipment",
                        "returnShipment"
                      ],
                      "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "dateDispatched": {
                      "type": "string",
                      "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "company": {
                      "type": "string",
                      "enum": [
                        "yurtici",
                        "mng",
                        "ptt",
                        "aras",
                        "surat",
                        "ups",
                        "fedex",
                        "dhl",
                        "tnt",
                        "pts",
                        "aramex",
                        "interGlobal",
                        "other"
                      ],
                      "description": "Shipping company."
                    },
                    "code": {
                      "type": "string",
                      "description": "Generated shipping code. "
                    },
                    "trackingNumber": {
                      "type": "string",
                      "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                    },
                    "trackingUrl": {
                      "type": "string",
                      "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                    },
                    "size": {
                      "type": "string",
                      "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                    },
                    "sizeUnit": {
                      "type": "string",
                      "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                      "enum": [
                        "deci"
                      ]
                    },
                    "weight": {
                      "type": "string",
                      "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                    },
                    "weightUnit": {
                      "type": "string",
                      "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                      "enum": [
                        "gram",
                        "kilogram"
                      ]
                    },
                    "cost": {
                      "type": "string",
                      "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new shipping code. ",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderId": {
                    "type": "string",
                    "description": "The ID of the order."
                  },
                  "company": {
                    "type": "string",
                    "enum": [
                      "yurtici",
                      "mng",
                      "ptt"
                    ],
                    "description": "Shipping company."
                  },
                  "type": {
                    "type": "string",
                    "default": "firstShipment",
                    "enum": [
                      "firstShipment",
                      "secondShipment",
                      "returnShipment"
                    ],
                    "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                  }
                },
                "required": [
                  "orderId",
                  "company"
                ]
              }
            }
          }
        },
        "tags": [
          "Shippings"
        ]
      }
    },
    "/shippings/{code}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "code",
          "in": "path",
          "required": true,
          "description": "Specify the shipping code to retrieve the shipping."
        }
      ],
      "get": {
        "summary": "Get a shipping",
        "tags": [
          "Shippings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Shipping",
                  "type": "object",
                  "description": "Shipping model.",
                  "properties": {
                    "orderId": {
                      "type": "string",
                      "description": "The ID of the order."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "shipped",
                        "notShipped"
                      ],
                      "description": "Current status of the shipping."
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "standard",
                        "contracted"
                      ],
                      "description": "Method of the shipping."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "firstShipment",
                        "secondShipment",
                        "returnShipment"
                      ],
                      "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "dateDispatched": {
                      "type": "string",
                      "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "company": {
                      "type": "string",
                      "enum": [
                        "yurtici",
                        "mng",
                        "ptt",
                        "aras",
                        "surat",
                        "ups",
                        "fedex",
                        "dhl",
                        "tnt",
                        "pts",
                        "aramex",
                        "interGlobal",
                        "other"
                      ],
                      "description": "Shipping company."
                    },
                    "code": {
                      "type": "string",
                      "description": "Generated shipping code. "
                    },
                    "trackingNumber": {
                      "type": "string",
                      "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                    },
                    "trackingUrl": {
                      "type": "string",
                      "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                    },
                    "size": {
                      "type": "string",
                      "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                    },
                    "sizeUnit": {
                      "type": "string",
                      "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                      "enum": [
                        "deci"
                      ]
                    },
                    "weight": {
                      "type": "string",
                      "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                    },
                    "weightUnit": {
                      "type": "string",
                      "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                      "enum": [
                        "gram",
                        "kilogram"
                      ]
                    },
                    "cost": {
                      "type": "string",
                      "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-shippings-code",
        "description": "Returns the details of a single shipping with the provided shipping code."
      },
      "delete": {
        "summary": "Delete a shipping code",
        "operationId": "delete-shippings-code",
        "description": "Deletes a shipping code. Shipping codes can be deleted if the shipment is not delivered to shipping company.",
        "tags": [
          "Shippings"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/balance": {
      "get": {
        "summary": "Get current balance",
        "tags": [
          "Balance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Balance",
                  "type": "array",
                  "description": "Balance model.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "enum": [
                          "TRY",
                          "USD",
                          "EUR"
                        ],
                        "description": "Currency of balance."
                      },
                      "amount": {
                        "type": "string",
                        "description": "Net amount, i.e., current balance."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-balance",
        "description": "Returns the current account balance. "
      }
    },
    "/balance/transactions": {
      "get": {
        "summary": "List all balance transactions",
        "tags": [
          "Balance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Transaction",
                    "type": "object",
                    "description": "Transaction model.",
                    "properties": {
                      "orderId": {
                        "type": "string",
                        "description": "The ID of the order."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "charge",
                          "adjustment"
                        ],
                        "description": "Type of the transaction."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the transaction."
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "The date and time for the creation of the transaction. yyyy-MM-ddTHH:mm:ssZ format is used (e.g. 2022-07-21T13:24:51+0300)."
                      },
                      "gross": {
                        "type": "object",
                        "description": "The gross amounts of the transaction.",
                        "properties": {
                          "originCurrency": {
                            "type": "string",
                            "description": "Origin currency of the transaction.",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ]
                          },
                          "originAmount": {
                            "type": "string",
                            "description": "Total origin amount paid by the buyer."
                          },
                          "payoutCurrency": {
                            "type": "string",
                            "description": "Payout currency of the transaction.",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ]
                          },
                          "payoutAmount": {
                            "type": "string",
                            "description": "Gross payout amount. Fees will be deducted from this during payout. "
                          },
                          "exchangeRate": {
                            "type": "string",
                            "description": "Exchange rate used for the transaction if the originCurrency and payoutCurrency are different. Returns \"1\" if these currencies are same."
                          }
                        }
                      },
                      "fee": {
                        "type": "array",
                        "description": "Total fees of the transaction.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "enum": [
                                "TRY",
                                "USD",
                                "EUR"
                              ],
                              "description": "Fee currency of the transaction."
                            },
                            "amount": {
                              "type": "string",
                              "description": "Total fee amount of the transaction for the returned currency."
                            }
                          }
                        }
                      },
                      "feeDetails": {
                        "type": "array",
                        "description": "Details of fee(s) of the transaction.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "serviceFee",
                                "shippingFee",
                                "vat",
                                "wht"
                              ],
                              "description": "Type of the single fee item."
                            },
                            "currency": {
                              "type": "string",
                              "description": "Fee currency of the single fee item.",
                              "enum": [
                                "TRY",
                                "USD",
                                "EUR"
                              ]
                            },
                            "amount": {
                              "type": "string",
                              "description": "Fee amount of the single fee item."
                            }
                          }
                        }
                      },
                      "installments": {
                        "type": "object",
                        "description": "Returns the details of installment payments. Returns empty in case of an advance payment.",
                        "properties": {
                          "term": {
                            "type": "integer",
                            "description": "Installment term in months."
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of the interest cost.",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ]
                          },
                          "interestCost": {
                            "type": "string",
                            "description": "Total interest cost over the term of installments."
                          },
                          "costBearer": {
                            "type": "string",
                            "enum": [
                              "buyer",
                              "seller"
                            ],
                            "description": "Bearer of the interest cost."
                          }
                        }
                      },
                      "net": {
                        "type": "array",
                        "description": "The net amount of the transaction. ",
                        "items": {
                          "type": "object",
                          "properties": {
                            "payoutCurrency": {
                              "type": "string",
                              "enum": [
                                "TRY",
                                "USD",
                                "EUR"
                              ],
                              "description": "Payout currency of the transaction."
                            },
                            "payoutAmount": {
                              "type": "string",
                              "description": "Net payout amount. Fees are already deducted to calculate net payout amount."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-balance-transactions",
        "description": "Returns a list of balance transactions, that have contributed to balance, with the provided limit, paging and sorting. By default, balance transactions are returned in sorted order, with the most recent balance transactions appearing first.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateStart",
            "description": "Show balance transactions created at or after datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateEnd",
            "description": "Show balance transactions created at or before datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-25T13:24:51+0300) "
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ]
      }
    },
    "/balance/transactions/{orderId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "Specify the order ID to retrieve the balance transaction."
        }
      ],
      "get": {
        "summary": "Get a balance transaction",
        "tags": [
          "Balance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Transaction",
                  "type": "object",
                  "description": "Transaction model.",
                  "properties": {
                    "orderId": {
                      "type": "string",
                      "description": "The ID of the order."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "charge",
                        "adjustment"
                      ],
                      "description": "Type of the transaction."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the transaction."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the transaction. yyyy-MM-ddTHH:mm:ssZ format is used (e.g. 2022-07-21T13:24:51+0300)."
                    },
                    "gross": {
                      "type": "object",
                      "description": "The gross amounts of the transaction.",
                      "properties": {
                        "originCurrency": {
                          "type": "string",
                          "description": "Origin currency of the transaction.",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ]
                        },
                        "originAmount": {
                          "type": "string",
                          "description": "Total origin amount paid by the buyer."
                        },
                        "payoutCurrency": {
                          "type": "string",
                          "description": "Payout currency of the transaction.",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ]
                        },
                        "payoutAmount": {
                          "type": "string",
                          "description": "Gross payout amount. Fees will be deducted from this during payout. "
                        },
                        "exchangeRate": {
                          "type": "string",
                          "description": "Exchange rate used for the transaction if the originCurrency and payoutCurrency are different. Returns \"1\" if these currencies are same."
                        }
                      }
                    },
                    "fee": {
                      "type": "array",
                      "description": "Total fees of the transaction.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "currency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Fee currency of the transaction."
                          },
                          "amount": {
                            "type": "string",
                            "description": "Total fee amount of the transaction for the returned currency."
                          }
                        }
                      }
                    },
                    "feeDetails": {
                      "type": "array",
                      "description": "Details of fee(s) of the transaction.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "serviceFee",
                              "shippingFee",
                              "vat",
                              "wht"
                            ],
                            "description": "Type of the single fee item."
                          },
                          "currency": {
                            "type": "string",
                            "description": "Fee currency of the single fee item.",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "description": "Fee amount of the single fee item."
                          }
                        }
                      }
                    },
                    "installments": {
                      "type": "object",
                      "description": "Returns the details of installment payments. Returns empty in case of an advance payment.",
                      "properties": {
                        "term": {
                          "type": "integer",
                          "description": "Installment term in months."
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of the interest cost.",
                          "enum": [
                            "TRY",
                            "USD",
                            "EUR"
                          ]
                        },
                        "interestCost": {
                          "type": "string",
                          "description": "Total interest cost over the term of installments."
                        },
                        "costBearer": {
                          "type": "string",
                          "enum": [
                            "buyer",
                            "seller"
                          ],
                          "description": "Bearer of the interest cost."
                        }
                      }
                    },
                    "net": {
                      "type": "array",
                      "description": "The net amount of the transaction. ",
                      "items": {
                        "type": "object",
                        "properties": {
                          "payoutCurrency": {
                            "type": "string",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ],
                            "description": "Payout currency of the transaction."
                          },
                          "payoutAmount": {
                            "type": "string",
                            "description": "Net payout amount. Fees are already deducted to calculate net payout amount."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-balance-transactions-orderId",
        "description": "Returns a single balance transaction with the provided order ID."
      }
    },
    "/payouts": {
      "get": {
        "summary": "List all payouts",
        "tags": [
          "Payouts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Payout",
                    "type": "object",
                    "description": "Payout model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the payout."
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "paid"
                        ],
                        "description": "Current status of the payout."
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "The date when the payout is initiated. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                      },
                      "amount": {
                        "type": "string",
                        "description": "Net amount that is transferred."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "TRY",
                          "USD",
                          "EUR"
                        ],
                        "description": "Currency of the payout."
                      },
                      "destination": {
                        "type": "object",
                        "description": "Information about seller's payout destination.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "bankAccount"
                            ],
                            "description": "Type of destination for the payout. "
                          },
                          "iban": {
                            "type": "string",
                            "description": "International Bank Account Number (IBAN) of the seller."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-payouts",
        "description": "Returns a list of payouts sent to external bank accounts with the provided limit, paging and sorting. By default, payouts are returned in sorted order, with the most recent payouts appearing first.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateStart",
            "description": "Show payouts created at or after datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300) "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateEnd",
            "description": "Show payouts created at or before datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-25T13:24:51+0300)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ]
      }
    },
    "/payouts/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the payout ID to retrieve the payout."
        }
      ],
      "get": {
        "summary": "Get a payout",
        "tags": [
          "Payouts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Payout",
                  "type": "object",
                  "description": "Payout model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the payout."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "paid"
                      ],
                      "description": "Current status of the payout."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date when the payout is initiated. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
                    },
                    "amount": {
                      "type": "string",
                      "description": "Net amount that is transferred."
                    },
                    "currency": {
                      "type": "string",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ],
                      "description": "Currency of the payout."
                    },
                    "destination": {
                      "type": "object",
                      "description": "Information about seller's payout destination.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "bankAccount"
                          ],
                          "description": "Type of destination for the payout. "
                        },
                        "iban": {
                          "type": "string",
                          "description": "International Bank Account Number (IBAN) of the seller."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-payouts-id",
        "description": "Returns a single payout with the provided payout ID."
      }
    },
    "/payouts/transactions/{id}": {
      "get": {
        "summary": "List all payout transactions",
        "tags": [
          "Payouts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Transaction",
                    "type": "object",
                    "description": "Transaction model.",
                    "properties": {
                      "orderId": {
                        "type": "string",
                        "description": "The ID of the order."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "charge",
                          "adjustment"
                        ],
                        "description": "Type of the transaction."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the transaction."
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "The date and time for the creation of the transaction. yyyy-MM-ddTHH:mm:ssZ format is used (e.g. 2022-07-21T13:24:51+0300)."
                      },
                      "gross": {
                        "type": "object",
                        "description": "The gross amounts of the transaction.",
                        "properties": {
                          "originCurrency": {
                            "type": "string",
                            "description": "Origin currency of the transaction.",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ]
                          },
                          "originAmount": {
                            "type": "string",
                            "description": "Total origin amount paid by the buyer."
                          },
                          "payoutCurrency": {
                            "type": "string",
                            "description": "Payout currency of the transaction.",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ]
                          },
                          "payoutAmount": {
                            "type": "string",
                            "description": "Gross payout amount. Fees will be deducted from this during payout. "
                          },
                          "exchangeRate": {
                            "type": "string",
                            "description": "Exchange rate used for the transaction if the originCurrency and payoutCurrency are different. Returns \"1\" if these currencies are same."
                          }
                        }
                      },
                      "fee": {
                        "type": "array",
                        "description": "Total fees of the transaction.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "enum": [
                                "TRY",
                                "USD",
                                "EUR"
                              ],
                              "description": "Fee currency of the transaction."
                            },
                            "amount": {
                              "type": "string",
                              "description": "Total fee amount of the transaction for the returned currency."
                            }
                          }
                        }
                      },
                      "feeDetails": {
                        "type": "array",
                        "description": "Details of fee(s) of the transaction.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "serviceFee",
                                "shippingFee",
                                "vat",
                                "wht"
                              ],
                              "description": "Type of the single fee item."
                            },
                            "currency": {
                              "type": "string",
                              "description": "Fee currency of the single fee item.",
                              "enum": [
                                "TRY",
                                "USD",
                                "EUR"
                              ]
                            },
                            "amount": {
                              "type": "string",
                              "description": "Fee amount of the single fee item."
                            }
                          }
                        }
                      },
                      "installments": {
                        "type": "object",
                        "description": "Returns the details of installment payments. Returns empty in case of an advance payment.",
                        "properties": {
                          "term": {
                            "type": "integer",
                            "description": "Installment term in months."
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of the interest cost.",
                            "enum": [
                              "TRY",
                              "USD",
                              "EUR"
                            ]
                          },
                          "interestCost": {
                            "type": "string",
                            "description": "Total interest cost over the term of installments."
                          },
                          "costBearer": {
                            "type": "string",
                            "enum": [
                              "buyer",
                              "seller"
                            ],
                            "description": "Bearer of the interest cost."
                          }
                        }
                      },
                      "net": {
                        "type": "array",
                        "description": "The net amount of the transaction. ",
                        "items": {
                          "type": "object",
                          "properties": {
                            "payoutCurrency": {
                              "type": "string",
                              "enum": [
                                "TRY",
                                "USD",
                                "EUR"
                              ],
                              "description": "Payout currency of the transaction."
                            },
                            "payoutAmount": {
                              "type": "string",
                              "description": "Net payout amount. Fees are already deducted to calculate net payout amount."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-payouts-transactions-id",
        "description": "Returns a list of payout transactions for a specific payout with the provided limit, paging and sorting. By default, payout transactions are returned in sorted order, with the most recent payout transactions appearing first.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the payout ID to retrieve the payout transactions."
        }
      ]
    },
    "/refunds": {
      "get": {
        "summary": "List all refunds",
        "tags": [
          "Refunds"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Refund",
                    "type": "object",
                    "description": "Refund model.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the refund."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the refund.",
                        "enum": [
                          "full",
                          "partial"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "failed",
                          "succeeded"
                        ],
                        "description": "Current status of the refund."
                      },
                      "orderId": {
                        "type": "string",
                        "description": "The order ID related with the refund."
                      },
                      "dateCreated": {
                        "type": "string",
                        "description": "The date and time for the creation of the refund request. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "dateRefunded": {
                        "type": "string",
                        "description": "The date and time for the actual refund transaction submitted to the payment provider. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency of the refund.",
                        "enum": [
                          "TRY",
                          "USD",
                          "EUR"
                        ]
                      },
                      "total": {
                        "type": "string",
                        "description": "Total amount of the refund."
                      },
                      "note": {
                        "type": "string",
                        "description": "Seller's note to buyer about the refund."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-refunds",
        "description": "Returns a list of refunds with the provided limit, paging and sorting. By default, refunds are returned in sorted order, with the most recent refunds appearing first.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateStart",
            "description": "Show refunds processed at or after datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dateEnd",
            "description": "Show refunds processed at or before datetime. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-25T13:24:51+0300)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "description": "Filter by order ID."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "failed",
                "succeeded"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Filter by refund status."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "multipleOf": 1,
              "default": 10
            },
            "description": "The maximum number of items to be returned in result set."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Current page of the collection."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "dateDesc",
              "enum": [
                "dateAsc",
                "dateDesc"
              ]
            },
            "description": "Sort results by date. "
          }
        ]
      },
      "post": {
        "summary": "Create a refund",
        "operationId": "post-refunds",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Refund",
                  "type": "object",
                  "description": "Refund model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the refund."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the refund.",
                      "enum": [
                        "full",
                        "partial"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "failed",
                        "succeeded"
                      ],
                      "description": "Current status of the refund."
                    },
                    "orderId": {
                      "type": "string",
                      "description": "The order ID related with the refund."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the refund request. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "dateRefunded": {
                      "type": "string",
                      "description": "The date and time for the actual refund transaction submitted to the payment provider. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency of the refund.",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ]
                    },
                    "total": {
                      "type": "string",
                      "description": "Total amount of the refund."
                    },
                    "note": {
                      "type": "string",
                      "description": "Seller's note to buyer about the refund."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new refund.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderId": {
                    "type": "string",
                    "description": "The ID of the order."
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount to be refunded."
                  },
                  "note": {
                    "type": "string",
                    "description": "Seller's note to buyer about the refund."
                  }
                },
                "required": [
                  "orderId",
                  "amount"
                ]
              }
            }
          }
        },
        "tags": [
          "Refunds"
        ]
      }
    },
    "/refunds/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the refund ID to retrieve the refund."
        }
      ],
      "get": {
        "summary": "Get a refund",
        "tags": [
          "Refunds"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Refund",
                  "type": "object",
                  "description": "Refund model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the refund."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the refund.",
                      "enum": [
                        "full",
                        "partial"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "failed",
                        "succeeded"
                      ],
                      "description": "Current status of the refund."
                    },
                    "orderId": {
                      "type": "string",
                      "description": "The order ID related with the refund."
                    },
                    "dateCreated": {
                      "type": "string",
                      "description": "The date and time for the creation of the refund request. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "dateRefunded": {
                      "type": "string",
                      "description": "The date and time for the actual refund transaction submitted to the payment provider. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency of the refund.",
                      "enum": [
                        "TRY",
                        "USD",
                        "EUR"
                      ]
                    },
                    "total": {
                      "type": "string",
                      "description": "Total amount of the refund."
                    },
                    "note": {
                      "type": "string",
                      "description": "Seller's note to buyer about the refund."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-refunds-id",
        "description": "Returns the details of a single refund with the provided refund ID."
      }
    },
    "/shop/owner": {
      "get": {
        "summary": "Get the shop’s owner information",
        "tags": [
          "Shop"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ShopOwner",
                  "type": "object",
                  "description": "Shop owner model.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The account ID of the shop."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the membership.",
                      "enum": [
                        "personal",
                        "business"
                      ]
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Name of the shop owner."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Surname of the shop owner."
                    },
                    "contact": {
                      "type": "object",
                      "description": "Shop owner's contact details.",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Shop owner's email address. "
                        },
                        "phone": {
                          "type": "string",
                          "description": "Shop owner's phone number."
                        },
                        "address": {
                          "type": "string",
                          "description": "Shop owner's physical address."
                        },
                        "district": {
                          "type": "string",
                          "description": "Shop owner's district."
                        },
                        "city": {
                          "type": "string",
                          "description": "Shop owner's city."
                        },
                        "state": {
                          "type": "string",
                          "description": "Shop owner's state."
                        },
                        "postcode": {
                          "type": "string",
                          "description": "Shop owner's postcode."
                        },
                        "country": {
                          "type": "string",
                          "description": "Shop owner's country."
                        }
                      }
                    },
                    "company": {
                      "type": "object",
                      "description": "Shop owner's company information. This is present when the shop's type is business. ",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the company."
                        },
                        "taxOffice": {
                          "type": "string",
                          "description": "Tax office of the company."
                        },
                        "taxNumber": {
                          "type": "string",
                          "description": "Tax number of the company."
                        }
                      }
                    },
                    "bankAccount": {
                      "type": "object",
                      "description": "Shop owner's bank account information.",
                      "properties": {
                        "accountHolder": {
                          "type": "string",
                          "description": "Account holder information for the bank account."
                        },
                        "iban": {
                          "type": "string",
                          "description": "International Bank Account Number (IBAN)."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-shop-owner",
        "description": "Returns information about the shop's owner."
      }
    },
    "/shop/settings": {
      "get": {
        "summary": "Get the shop’s settings",
        "tags": [
          "Shop"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ShopSetting",
                  "type": "object",
                  "description": "Shop setting model.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the shop. This is the unique variable that appears at the end of the URL of the shop."
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the shop.\n(e.g., https://www.shopier.com/tshirtshop)"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the shop. This the brief heading located at the shop's main page."
                    },
                    "slogan": {
                      "type": "string",
                      "description": "Slogan or catchword located at the shop's main page."
                    },
                    "announcement": {
                      "type": "string",
                      "description": "Announcement to buyers located at the shop's main page."
                    },
                    "confirmation": {
                      "type": "string",
                      "description": "Order confirmation text. Is shown to buyers when an order is created after a successful payment."
                    },
                    "email": {
                      "type": "string",
                      "description": "Email address located at the shop's main page. This can be different than the shop owner's email."
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number located at the shop's main page. This can be different than the shop owner's phone number."
                    },
                    "access": {
                      "type": "boolean",
                      "description": "Represents whether the shop URL is publicly accessible."
                    },
                    "cart": {
                      "type": "boolean",
                      "description": "Represents whether the shopping cart is used during checkouts. If the cart value is FALSE multiple products can not be purchased at the shop, only a single product can be purchased for each order."
                    },
                    "mobileView": {
                      "type": "string",
                      "enum": [
                        "singleColumn",
                        "doubleColumn"
                      ],
                      "description": "Shop's appearance for mobile devices. Products can be placed either on a single column or on double columns."
                    },
                    "filter": {
                      "type": "boolean",
                      "description": "Represents whether the product filter options are present or not."
                    },
                    "outOfStock": {
                      "type": "boolean",
                      "description": "Represents whether the out of stock products are shown to buyers."
                    },
                    "language": {
                      "type": "string",
                      "enum": [
                        "TR",
                        "EN"
                      ],
                      "description": "Language selection of the shop. "
                    },
                    "vacation": {
                      "type": "boolean",
                      "description": "Represents whether the seller accepts orders. Returns TRUE if the shop is closed for orders, returns FALSE if the shop is open for orders."
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "operationId": "get-shop-settings",
        "description": "Returns the current settings of the shop. "
      },
      "put": {
        "summary": "Update the shop’s settings",
        "operationId": "put-shop-settings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ShopSetting",
                  "type": "object",
                  "description": "Shop setting model.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the shop. This is the unique variable that appears at the end of the URL of the shop."
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the shop.\n(e.g., https://www.shopier.com/tshirtshop)"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the shop. This the brief heading located at the shop's main page."
                    },
                    "slogan": {
                      "type": "string",
                      "description": "Slogan or catchword located at the shop's main page."
                    },
                    "announcement": {
                      "type": "string",
                      "description": "Announcement to buyers located at the shop's main page."
                    },
                    "confirmation": {
                      "type": "string",
                      "description": "Order confirmation text. Is shown to buyers when an order is created after a successful payment."
                    },
                    "email": {
                      "type": "string",
                      "description": "Email address located at the shop's main page. This can be different than the shop owner's email."
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number located at the shop's main page. This can be different than the shop owner's phone number."
                    },
                    "access": {
                      "type": "boolean",
                      "description": "Represents whether the shop URL is publicly accessible."
                    },
                    "cart": {
                      "type": "boolean",
                      "description": "Represents whether the shopping cart is used during checkouts. If the cart value is FALSE multiple products can not be purchased at the shop, only a single product can be purchased for each order."
                    },
                    "mobileView": {
                      "type": "string",
                      "enum": [
                        "singleColumn",
                        "doubleColumn"
                      ],
                      "description": "Shop's appearance for mobile devices. Products can be placed either on a single column or on double columns."
                    },
                    "filter": {
                      "type": "boolean",
                      "description": "Represents whether the product filter options are present or not."
                    },
                    "outOfStock": {
                      "type": "boolean",
                      "description": "Represents whether the out of stock products are shown to buyers."
                    },
                    "language": {
                      "type": "string",
                      "enum": [
                        "TR",
                        "EN"
                      ],
                      "description": "Language selection of the shop. "
                    },
                    "vacation": {
                      "type": "boolean",
                      "description": "Represents whether the seller accepts orders. Returns TRUE if the shop is closed for orders, returns FALSE if the shop is open for orders."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Updates the settings of the shop. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the shop. This the brief heading located at the shop's main page."
                  },
                  "slogan": {
                    "type": "string",
                    "description": "Slogan or catchword located at the shop's main page."
                  },
                  "announcement": {
                    "type": "string",
                    "description": "Announcement to buyers located at the shop's main page."
                  },
                  "confirmation": {
                    "type": "string",
                    "description": "Order confirmation text. Is shown to buyers when an order is created after a successful payment."
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address located at the shop's main page. This can be different than the seller account's email."
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number located at the shop's main page. This can be different than the seller account's phone number."
                  },
                  "access": {
                    "type": "boolean",
                    "description": "Represents whether the shop URL is publicly accessible."
                  },
                  "cart": {
                    "type": "boolean",
                    "description": "Represents whether the shopping cart is used during checkouts. If the cart value is FALSE multiple products can not be purchased at the shop, only a single product can be purchased for each order."
                  },
                  "mobileView": {
                    "type": "string",
                    "description": "Shop's appearance for mobile devices. Products can be placed either on a single column or on double columns."
                  },
                  "filter": {
                    "type": "boolean",
                    "description": "Represents whether the product filter options are present or not."
                  },
                  "stockOutProducts": {
                    "type": "boolean",
                    "description": "Represents whether the out of stock products are shown to buyers."
                  },
                  "language": {
                    "type": "string",
                    "description": "Language selection of the shop."
                  },
                  "vacation": {
                    "type": "boolean",
                    "description": "Represents whether the seller accepts orders. TRUE if the shop is closed for orders, FALSE if the shop is open for orders."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shop"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "title": "Product",
        "type": "object",
        "description": "Product model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the product."
          },
          "title": {
            "type": "string",
            "description": "Title of the product."
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the product."
          },
          "type": {
            "type": "string",
            "enum": [
              "physical",
              "digital"
            ],
            "description": "Type of the product."
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time of the initial product listing. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "dateUpdated": {
            "type": "string",
            "description": "The date and time of the product update. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "url": {
            "type": "string",
            "description": "The URL of the product. \n(e.g., https://www.shopier.com/696547)"
          },
          "media": {
            "type": "array",
            "description": "Details of product media files.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of media file."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "image"
                  ],
                  "description": "Type of media file."
                },
                "url": {
                  "type": "string",
                  "description": "The URL of media file.\n(e.g., https://dmih5ui1qqea9.cloudfront.net/pictures_large/Camiseta6855_cobalt-blue-t-shirt.jpg)"
                },
                "placement": {
                  "type": "integer",
                  "description": "Ranking of the media file in product pages. Returns \"1\" for the primary media file.",
                  "minimum": 1,
                  "multipleOf": 1,
                  "maximum": 5
                }
              }
            }
          },
          "priceData": {
            "type": "object",
            "description": "Details of the price information.",
            "properties": {
              "currency": {
                "type": "string",
                "enum": [
                  "TRY",
                  "USD",
                  "EUR"
                ],
                "description": "Currency of the product."
              },
              "price": {
                "type": "string",
                "description": "Unit price of the product."
              },
              "discount": {
                "type": "boolean",
                "description": "Represents whether there is a product based discount."
              },
              "discountedPrice": {
                "type": "string",
                "description": "Discounted price of the product."
              },
              "shippingPrice": {
                "type": "string",
                "description": "Shipping price of the product."
              }
            }
          },
          "stockStatus": {
            "type": "string",
            "enum": [
              "inStock",
              "outOfStock"
            ],
            "description": "Current stock status of the product."
          },
          "stockQuantity": {
            "type": "integer",
            "description": "Current stock quantity of the product."
          },
          "shippingPayer": {
            "type": "string",
            "enum": [
              "sellerPays",
              "buyerPays"
            ],
            "description": "Represents who pays for shipping during dispatch or delivery."
          },
          "categories": {
            "type": "array",
            "description": "List of categories that product belongs to.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of category."
                },
                "title": {
                  "type": "string",
                  "description": "The title of category."
                }
              }
            }
          },
          "variants": {
            "type": "array",
            "description": "List of variants of the product.",
            "items": {
              "type": "object",
              "properties": {
                "variationId": {
                  "type": "array",
                  "description": "The ID of variation.",
                  "items": {
                    "type": "string"
                  }
                },
                "variationTitle": {
                  "type": "array",
                  "description": "The title of variation.",
                  "items": {
                    "type": "string"
                  }
                },
                "selectionId": {
                  "type": "array",
                  "description": "The ID of selection.",
                  "items": {
                    "type": "string"
                  }
                },
                "selectionTitle": {
                  "type": "array",
                  "description": "The title of selection.",
                  "items": {
                    "type": "string"
                  }
                },
                "stockStatus": {
                  "type": "string",
                  "enum": [
                    "inStock",
                    "outOfStock"
                  ],
                  "description": "Current stock status of the variant."
                },
                "stockQuantity": {
                  "type": "integer",
                  "description": "Current stock quantity of the variant."
                }
              }
            }
          },
          "options": {
            "type": "array",
            "description": "List of options of the product.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of option."
                },
                "title": {
                  "type": "string",
                  "description": "The title of option."
                },
                "price": {
                  "type": "string",
                  "description": "The price of option."
                }
              }
            }
          },
          "singleOption": {
            "type": "boolean",
            "description": "Represents whether a single option or multiple options can be selected during chekout."
          },
          "customListing": {
            "type": "boolean",
            "description": "Represents whether the listing is a custom or standard one."
          },
          "customNote": {
            "type": "string",
            "description": "Overrides the placeholder for note to seller field. Used for collecting a custom information from the buyer during checkout."
          },
          "placementScore": {
            "type": "integer",
            "minimum": 1,
            "multipleOf": 1,
            "description": "Placement score of the product. Products with higher values are placed first in the store."
          },
          "dispatchDuration": {
            "type": "integer",
            "minimum": 1,
            "maximum": 3,
            "multipleOf": 1,
            "description": "Dispatch duration in terms of days from seller to shipping company."
          }
        }
      },
      "Category": {
        "title": "Category",
        "type": "object",
        "description": "Category model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the product category."
          },
          "title": {
            "type": "string",
            "description": "The title of the product category."
          },
          "placement": {
            "type": "integer",
            "minimum": 1,
            "multipleOf": 1,
            "description": "Ranking of the product category in the shop. Returns \"1\" for the first category, increments accordingly."
          }
        }
      },
      "Variation": {
        "title": "Variation",
        "type": "object",
        "description": "Variation model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the product variation."
          },
          "title": {
            "type": "string",
            "description": "The title of the product variation."
          },
          "placement": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2,
            "multipleOf": 1,
            "description": "Ranking of the product variation in the shop. Returns \"1\" for the first variation, returns \"2\" for the second variation."
          }
        }
      },
      "Selection": {
        "title": "Selection",
        "type": "object",
        "description": "Selection model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the product selection, a subset of product variation."
          },
          "title": {
            "type": "string",
            "description": "The title of the product selection, a subset of product variation."
          },
          "variationId": {
            "type": "string",
            "description": "The ID of the related product variation."
          }
        }
      },
      "DiscountCode": {
        "title": "DiscountCode",
        "type": "object",
        "description": "Discount code model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of discount code."
          },
          "code": {
            "type": "string",
            "description": "The discount code for the buyers used at the checkout."
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time for the creation of the discount code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "type": {
            "type": "string",
            "description": "Type of the discount.",
            "enum": [
              "amount",
              "percent"
            ]
          },
          "amountOff": {
            "type": "string",
            "description": "The absolute value of the discount amount. Used when the discount code type is \"amount\"."
          },
          "percentOff": {
            "type": "string",
            "description": "The percentage rate of the discount. Used when the discount code type is \"percent\"."
          },
          "amountMinimum": {
            "type": "string",
            "description": "Required minimum order amount for the discount code to be applicable. "
          },
          "currency": {
            "type": "string",
            "enum": [
              "TRY",
              "USD",
              "EUR"
            ],
            "description": "Currency of the discount code."
          },
          "numAvailable": {
            "type": "integer",
            "description": "Number of remaining discount codes that can be used."
          },
          "numUsed": {
            "type": "integer",
            "description": "Number of times the discount code has been used."
          },
          "expiresAt": {
            "type": "string",
            "description": "Expiry date of the discount code. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
          }
        }
      },
      "AutomaticDiscount": {
        "title": "AutomaticDiscount",
        "type": "object",
        "description": "Automatic discount model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the automatic discount."
          },
          "title": {
            "type": "string",
            "description": "The title of the automatic discount."
          },
          "scope": {
            "type": "string",
            "enum": [
              "all",
              "selectedProducts",
              "selectedCategories"
            ],
            "description": "The scope of the automatic discount. Automatic discounts can be applied for all or some of the products or categories."
          },
          "productIds": {
            "type": "array",
            "description": "List of product IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedProducts\".",
            "items": {
              "type": "string"
            }
          },
          "categoryIds": {
            "type": "array",
            "description": "List of category IDs the automatic discount is applicable. Used when the scope is \"all\" or \"selectedCategories\".",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time for the creation of the automatic discount. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "type": {
            "type": "string",
            "description": "Type of the discount.",
            "enum": [
              "amount",
              "percent"
            ]
          },
          "amountOff": {
            "type": "string",
            "description": "The absolute value of the discount amount. Used when the automatic discount type is \"amount\"."
          },
          "percentOff": {
            "type": "string",
            "description": "The percentage rate of the discount. Used when the automatic discount type is \"percent\"."
          },
          "requirement": {
            "type": "string",
            "enum": [
              "amount",
              "quantity"
            ],
            "description": "The requirement type of the automatic discount."
          },
          "amountMinimum": {
            "type": "string",
            "description": "The minimum purchase amount for the automatic discount to be applicable. Used when the automatic discount requirement is \"amount\"."
          },
          "quantityMinimum": {
            "type": "integer",
            "description": "The minimum number of items to be purchased for the automatic discount to be applicable. Used when the automatic discount requirement is \"quantity\"."
          },
          "currency": {
            "type": "string",
            "enum": [
              "TRY",
              "USD",
              "EUR"
            ],
            "description": "Currency of the automatic discount."
          },
          "startsAt": {
            "type": "string",
            "description": "Start date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
          },
          "expiresAt": {
            "type": "string",
            "description": "Expiry date of the automatic discount. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
          }
        }
      },
      "Order": {
        "title": "Order",
        "type": "object",
        "description": "Order model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the order."
          },
          "status": {
            "type": "string",
            "enum": [
              "fulfilled",
              "unfulfilled"
            ],
            "description": "Current fulfillment status of the order."
          },
          "paymentStatus": {
            "type": "string",
            "description": "Current payment status of the order (Currently only paid orders are in scope, unpaid is reserved for future use).",
            "enum": [
              "paid",
              "unpaid"
            ]
          },
          "installments": {
            "type": "boolean",
            "description": "Returns true if the payment is done in installments."
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time for the creation of the order. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "currency": {
            "type": "string",
            "enum": [
              "TRY",
              "USD",
              "EUR"
            ],
            "description": "Currency of the order."
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "debitCard",
              "creditCard"
            ],
            "description": "Buyer's method of payment."
          },
          "totals": {
            "type": "object",
            "description": "The total amounts for all order line items.",
            "properties": {
              "subtotal": {
                "type": "string",
                "description": "Subtotal amount for all the products and/or services sold."
              },
              "shipping": {
                "type": "string",
                "description": "Shipping amount of the order."
              },
              "discount": {
                "type": "string",
                "description": "Discount amount of the order."
              },
              "total": {
                "type": "string",
                "description": "Grand total amount of the order."
              }
            }
          },
          "discounts": {
            "type": "array",
            "description": "Details of the discounts applied.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the discount."
                },
                "method": {
                  "type": "string",
                  "enum": [
                    "discountCode",
                    "automaticDiscount"
                  ],
                  "description": "Discount method."
                }
              }
            }
          },
          "shippingInfo": {
            "type": "object",
            "description": "Buyer's shipping address and details.",
            "properties": {
              "firstName": {
                "type": "string",
                "description": "Buyer's first name for shipping."
              },
              "lastName": {
                "type": "string",
                "description": "Buyer's last name for shipping."
              },
              "nationalId": {
                "type": "string",
                "description": "Buyer's national identification number for shipping."
              },
              "email": {
                "type": "string",
                "description": "Buyer's email address for shipping."
              },
              "phone": {
                "type": "string",
                "description": "Buyer's phone number for shipping."
              },
              "company": {
                "type": "string",
                "description": "Buyer company's name for shipping."
              },
              "address": {
                "type": "string",
                "description": "Buyer's physical address for shipping."
              },
              "district": {
                "type": "string",
                "description": "Buyer's district for shipping."
              },
              "city": {
                "type": "string",
                "description": "Buyer's city for shipping."
              },
              "state": {
                "type": "string",
                "description": "Buyer's state for shipping."
              },
              "postcode": {
                "type": "string",
                "description": "Buyer's postcode for shipping."
              },
              "country": {
                "type": "string",
                "description": "Buyer's country for shipping."
              }
            }
          },
          "billingInfo": {
            "type": "object",
            "description": "Buyer's billing address and details. Separate billing information can only be present if the seller uses a special purpose app to collect this information. ",
            "properties": {
              "firstName": {
                "type": "string",
                "description": "Buyer's first name for billing."
              },
              "lastName": {
                "type": "string",
                "description": "Buyer's last name for billing."
              },
              "nationalId": {
                "type": "string",
                "description": "Buyer's national identification number for billing."
              },
              "email": {
                "type": "string",
                "description": "Buyer's email address for billing."
              },
              "phone": {
                "type": "string",
                "description": "Buyer's phone number for billing."
              },
              "company": {
                "type": "string",
                "description": "Buyer company's name for billing."
              },
              "taxOffice": {
                "type": "string",
                "description": "Buyer company's tax office name for billing."
              },
              "taxNumber": {
                "type": "string",
                "description": "Buyer company's tax number for billing."
              },
              "address": {
                "type": "string",
                "description": "Buyer's physical address for billing."
              },
              "district": {
                "type": "string",
                "description": "Buyer's district for billing."
              },
              "city": {
                "type": "string",
                "description": "Buyer's city for billing."
              },
              "state": {
                "type": "string",
                "description": "Buyer's state for billing."
              },
              "postcode": {
                "type": "string",
                "description": "Buyer's postcode for billing."
              },
              "country": {
                "type": "string",
                "description": "Buyer's country for billing."
              }
            }
          },
          "note": {
            "type": "string",
            "description": "Buyer's order note."
          },
          "lineItems": {
            "type": "array",
            "description": "Order line items for all the products and/or services sold.",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "description": "The ID of the product."
                },
                "title": {
                  "type": "string",
                  "description": "The title of the product."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the product.",
                  "enum": [
                    "physical",
                    "digital"
                  ]
                },
                "selection": {
                  "type": "array",
                  "description": "Selection details of the product sold.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the product's selection, a subset of product's variation."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the product's selection, a subset of product's variation."
                      },
                      "variationTitle": {
                        "type": "string",
                        "description": "The title of the main product variation."
                      }
                    }
                  }
                },
                "options": {
                  "type": "array",
                  "description": "Option details of the product.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the product's option."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the product's option."
                      }
                    }
                  }
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity ordered."
                },
                "price": {
                  "type": "string",
                  "description": "Unit price of the product."
                },
                "total": {
                  "type": "string",
                  "description": "Total price of the order line item."
                }
              }
            }
          },
          "fulfillments": {
            "type": "array",
            "description": "Details of the order fulfillments. Direction of fulfillments is seller to buyer.",
            "items": {
              "title": "Shipping",
              "type": "object",
              "description": "Shipping model.",
              "properties": {
                "orderId": {
                  "type": "string",
                  "description": "The ID of the order."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "shipped",
                    "notShipped"
                  ],
                  "description": "Current status of the shipping."
                },
                "method": {
                  "type": "string",
                  "enum": [
                    "standard",
                    "contracted"
                  ],
                  "description": "Method of the shipping."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "firstShipment",
                    "secondShipment",
                    "returnShipment"
                  ],
                  "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                },
                "dateCreated": {
                  "type": "string",
                  "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                },
                "dateDispatched": {
                  "type": "string",
                  "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                },
                "company": {
                  "type": "string",
                  "enum": [
                    "yurtici",
                    "mng",
                    "ptt",
                    "aras",
                    "surat",
                    "ups",
                    "fedex",
                    "dhl",
                    "tnt",
                    "pts",
                    "aramex",
                    "interGlobal",
                    "other"
                  ],
                  "description": "Shipping company."
                },
                "code": {
                  "type": "string",
                  "description": "Generated shipping code. "
                },
                "trackingNumber": {
                  "type": "string",
                  "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                },
                "trackingUrl": {
                  "type": "string",
                  "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                },
                "size": {
                  "type": "string",
                  "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                },
                "sizeUnit": {
                  "type": "string",
                  "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                  "enum": [
                    "deci"
                  ]
                },
                "weight": {
                  "type": "string",
                  "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                },
                "weightUnit": {
                  "type": "string",
                  "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                  "enum": [
                    "gram",
                    "kilogram"
                  ]
                },
                "cost": {
                  "type": "string",
                  "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                },
                "currency": {
                  "type": "string",
                  "enum": [
                    "TRY",
                    "USD",
                    "EUR"
                  ],
                  "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                }
              }
            }
          },
          "returns": {
            "type": "array",
            "description": "Details of the order returns. Direction of returns is buyer to seller.",
            "items": {
              "title": "Shipping",
              "type": "object",
              "description": "Shipping model.",
              "properties": {
                "orderId": {
                  "type": "string",
                  "description": "The ID of the order."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "shipped",
                    "notShipped"
                  ],
                  "description": "Current status of the shipping."
                },
                "method": {
                  "type": "string",
                  "enum": [
                    "standard",
                    "contracted"
                  ],
                  "description": "Method of the shipping."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "firstShipment",
                    "secondShipment",
                    "returnShipment"
                  ],
                  "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
                },
                "dateCreated": {
                  "type": "string",
                  "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                },
                "dateDispatched": {
                  "type": "string",
                  "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                },
                "company": {
                  "type": "string",
                  "enum": [
                    "yurtici",
                    "mng",
                    "ptt",
                    "aras",
                    "surat",
                    "ups",
                    "fedex",
                    "dhl",
                    "tnt",
                    "pts",
                    "aramex",
                    "interGlobal",
                    "other"
                  ],
                  "description": "Shipping company."
                },
                "code": {
                  "type": "string",
                  "description": "Generated shipping code. "
                },
                "trackingNumber": {
                  "type": "string",
                  "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
                },
                "trackingUrl": {
                  "type": "string",
                  "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
                },
                "size": {
                  "type": "string",
                  "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                },
                "sizeUnit": {
                  "type": "string",
                  "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                  "enum": [
                    "deci"
                  ]
                },
                "weight": {
                  "type": "string",
                  "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
                },
                "weightUnit": {
                  "type": "string",
                  "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
                  "enum": [
                    "gram",
                    "kilogram"
                  ]
                },
                "cost": {
                  "type": "string",
                  "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
                },
                "currency": {
                  "type": "string",
                  "enum": [
                    "TRY",
                    "USD",
                    "EUR"
                  ],
                  "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
                }
              }
            }
          },
          "refunds": {
            "type": "array",
            "description": "Details of the refunds issued.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the refund."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "full",
                    "partial"
                  ],
                  "description": "The type of the refund."
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "failed",
                    "succeeded"
                  ],
                  "description": "Current status of the refund."
                },
                "dateCreated": {
                  "type": "string",
                  "description": "The date and time for the creation of the refund request. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                },
                "dateRefunded": {
                  "type": "string",
                  "description": "The date and time for the actual refund transaction submitted to the payment provider. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
                },
                "total": {
                  "type": "string",
                  "description": "Total amount of the refund."
                }
              }
            }
          }
        }
      },
      "Shipping": {
        "title": "Shipping",
        "type": "object",
        "description": "Shipping model.",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The ID of the order."
          },
          "status": {
            "type": "string",
            "enum": [
              "shipped",
              "notShipped"
            ],
            "description": "Current status of the shipping."
          },
          "method": {
            "type": "string",
            "enum": [
              "standard",
              "contracted"
            ],
            "description": "Method of the shipping."
          },
          "type": {
            "type": "string",
            "enum": [
              "firstShipment",
              "secondShipment",
              "returnShipment"
            ],
            "description": "Type of the shipping. firstShipment and secondShipment are used for seller to buyer direction, returnShipment is used for buyer to seller direction."
          },
          "dateCreated": {
            "type": "string",
            "description": "For standard shipping, this is the date and time of the order closure. For contracted shipping, this is the date and time for the creation of the shipping code. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "dateDispatched": {
            "type": "string",
            "description": "The date and time of the initial dispatch. It is provided by the shipping company and only present for contracted shipping. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "company": {
            "type": "string",
            "enum": [
              "yurtici",
              "mng",
              "ptt",
              "aras",
              "surat",
              "ups",
              "fedex",
              "dhl",
              "tnt",
              "pts",
              "aramex",
              "interGlobal",
              "other"
            ],
            "description": "Shipping company."
          },
          "code": {
            "type": "string",
            "description": "Generated shipping code. "
          },
          "trackingNumber": {
            "type": "string",
            "description": "Tracking number of the shipping. For standard shipping, it is provided by the seller while closing the order. For contracted shipping, it is provided by the shipping company with the initial dispatch. "
          },
          "trackingUrl": {
            "type": "string",
            "description": "Tracking URL of the shipping. It is provided by the shipping company and only present for contracted shipping."
          },
          "size": {
            "type": "string",
            "description": "Size of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
          },
          "sizeUnit": {
            "type": "string",
            "description": "Size unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
            "enum": [
              "deci"
            ]
          },
          "weight": {
            "type": "string",
            "description": "Weight of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping."
          },
          "weightUnit": {
            "type": "string",
            "description": "Weight unit of the shipping load. It is provided by some of the shipping companies and only present for contracted shipping.",
            "enum": [
              "gram",
              "kilogram"
            ]
          },
          "cost": {
            "type": "string",
            "description": "Cost of the shipping. It is provided by the shipping company and only present for contracted shipping."
          },
          "currency": {
            "type": "string",
            "enum": [
              "TRY",
              "USD",
              "EUR"
            ],
            "description": "Currency of the shipping cost. It is provided by the shipping company and only present for contracted shipping."
          }
        }
      },
      "Balance": {
        "title": "Balance",
        "type": "array",
        "description": "Balance model.",
        "items": {
          "type": "object",
          "properties": {
            "currency": {
              "type": "string",
              "enum": [
                "TRY",
                "USD",
                "EUR"
              ],
              "description": "Currency of balance."
            },
            "amount": {
              "type": "string",
              "description": "Net amount, i.e., current balance."
            }
          }
        }
      },
      "Payout": {
        "title": "Payout",
        "type": "object",
        "description": "Payout model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the payout."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "paid"
            ],
            "description": "Current status of the payout."
          },
          "dateCreated": {
            "type": "string",
            "description": "The date when the payout is initiated. yyyy-MM-ddZ format is used (e.g., 2022-07-21+0300)."
          },
          "amount": {
            "type": "string",
            "description": "Net amount that is transferred."
          },
          "currency": {
            "type": "string",
            "enum": [
              "TRY",
              "USD",
              "EUR"
            ],
            "description": "Currency of the payout."
          },
          "destination": {
            "type": "object",
            "description": "Information about seller's payout destination.",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "bankAccount"
                ],
                "description": "Type of destination for the payout. "
              },
              "iban": {
                "type": "string",
                "description": "International Bank Account Number (IBAN) of the seller."
              }
            }
          }
        }
      },
      "Transaction": {
        "title": "Transaction",
        "type": "object",
        "description": "Transaction model.",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The ID of the order."
          },
          "type": {
            "type": "string",
            "enum": [
              "charge",
              "adjustment"
            ],
            "description": "Type of the transaction."
          },
          "description": {
            "type": "string",
            "description": "Description of the transaction."
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time for the creation of the transaction. yyyy-MM-ddTHH:mm:ssZ format is used (e.g. 2022-07-21T13:24:51+0300)."
          },
          "gross": {
            "type": "object",
            "description": "The gross amounts of the transaction.",
            "properties": {
              "originCurrency": {
                "type": "string",
                "description": "Origin currency of the transaction.",
                "enum": [
                  "TRY",
                  "USD",
                  "EUR"
                ]
              },
              "originAmount": {
                "type": "string",
                "description": "Total origin amount paid by the buyer."
              },
              "payoutCurrency": {
                "type": "string",
                "description": "Payout currency of the transaction.",
                "enum": [
                  "TRY",
                  "USD",
                  "EUR"
                ]
              },
              "payoutAmount": {
                "type": "string",
                "description": "Gross payout amount. Fees will be deducted from this during payout. "
              },
              "exchangeRate": {
                "type": "string",
                "description": "Exchange rate used for the transaction if the originCurrency and payoutCurrency are different. Returns \"1\" if these currencies are same."
              }
            }
          },
          "fee": {
            "type": "array",
            "description": "Total fees of the transaction.",
            "items": {
              "type": "object",
              "properties": {
                "currency": {
                  "type": "string",
                  "enum": [
                    "TRY",
                    "USD",
                    "EUR"
                  ],
                  "description": "Fee currency of the transaction."
                },
                "amount": {
                  "type": "string",
                  "description": "Total fee amount of the transaction for the returned currency."
                }
              }
            }
          },
          "feeDetails": {
            "type": "array",
            "description": "Details of fee(s) of the transaction.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "serviceFee",
                    "shippingFee",
                    "vat",
                    "wht"
                  ],
                  "description": "Type of the single fee item."
                },
                "currency": {
                  "type": "string",
                  "description": "Fee currency of the single fee item.",
                  "enum": [
                    "TRY",
                    "USD",
                    "EUR"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "Fee amount of the single fee item."
                }
              }
            }
          },
          "installments": {
            "type": "object",
            "description": "Returns the details of installment payments. Returns empty in case of an advance payment.",
            "properties": {
              "term": {
                "type": "integer",
                "description": "Installment term in months."
              },
              "currency": {
                "type": "string",
                "description": "Currency of the interest cost.",
                "enum": [
                  "TRY",
                  "USD",
                  "EUR"
                ]
              },
              "interestCost": {
                "type": "string",
                "description": "Total interest cost over the term of installments."
              },
              "costBearer": {
                "type": "string",
                "enum": [
                  "buyer",
                  "seller"
                ],
                "description": "Bearer of the interest cost."
              }
            }
          },
          "net": {
            "type": "array",
            "description": "The net amount of the transaction. ",
            "items": {
              "type": "object",
              "properties": {
                "payoutCurrency": {
                  "type": "string",
                  "enum": [
                    "TRY",
                    "USD",
                    "EUR"
                  ],
                  "description": "Payout currency of the transaction."
                },
                "payoutAmount": {
                  "type": "string",
                  "description": "Net payout amount. Fees are already deducted to calculate net payout amount."
                }
              }
            }
          }
        }
      },
      "Refund": {
        "title": "Refund",
        "type": "object",
        "description": "Refund model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the refund."
          },
          "type": {
            "type": "string",
            "description": "The type of the refund.",
            "enum": [
              "full",
              "partial"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "failed",
              "succeeded"
            ],
            "description": "Current status of the refund."
          },
          "orderId": {
            "type": "string",
            "description": "The order ID related with the refund."
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time for the creation of the refund request. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "dateRefunded": {
            "type": "string",
            "description": "The date and time for the actual refund transaction submitted to the payment provider. yyyy-MM-ddTHH:mm:ssZ format is used (e.g., 2022-07-21T13:24:51+0300)."
          },
          "currency": {
            "type": "string",
            "description": "Currency of the refund.",
            "enum": [
              "TRY",
              "USD",
              "EUR"
            ]
          },
          "total": {
            "type": "string",
            "description": "Total amount of the refund."
          },
          "note": {
            "type": "string",
            "description": "Seller's note to buyer about the refund."
          }
        }
      },
      "ShopOwner": {
        "title": "ShopOwner",
        "type": "object",
        "description": "Shop owner model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The account ID of the shop."
          },
          "type": {
            "type": "string",
            "description": "Type of the membership.",
            "enum": [
              "personal",
              "business"
            ]
          },
          "firstName": {
            "type": "string",
            "description": "Name of the shop owner."
          },
          "lastName": {
            "type": "string",
            "description": "Surname of the shop owner."
          },
          "contact": {
            "type": "object",
            "description": "Shop owner's contact details.",
            "properties": {
              "email": {
                "type": "string",
                "description": "Shop owner's email address. "
              },
              "phone": {
                "type": "string",
                "description": "Shop owner's phone number."
              },
              "address": {
                "type": "string",
                "description": "Shop owner's physical address."
              },
              "district": {
                "type": "string",
                "description": "Shop owner's district."
              },
              "city": {
                "type": "string",
                "description": "Shop owner's city."
              },
              "state": {
                "type": "string",
                "description": "Shop owner's state."
              },
              "postcode": {
                "type": "string",
                "description": "Shop owner's postcode."
              },
              "country": {
                "type": "string",
                "description": "Shop owner's country."
              }
            }
          },
          "company": {
            "type": "object",
            "description": "Shop owner's company information. This is present when the shop's type is business. ",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the company."
              },
              "taxOffice": {
                "type": "string",
                "description": "Tax office of the company."
              },
              "taxNumber": {
                "type": "string",
                "description": "Tax number of the company."
              }
            }
          },
          "bankAccount": {
            "type": "object",
            "description": "Shop owner's bank account information.",
            "properties": {
              "accountHolder": {
                "type": "string",
                "description": "Account holder information for the bank account."
              },
              "iban": {
                "type": "string",
                "description": "International Bank Account Number (IBAN)."
              }
            }
          }
        }
      },
      "ShopSetting": {
        "title": "ShopSetting",
        "type": "object",
        "description": "Shop setting model.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the shop. This is the unique variable that appears at the end of the URL of the shop."
          },
          "url": {
            "type": "string",
            "description": "URL of the shop.\n(e.g., https://www.shopier.com/tshirtshop)"
          },
          "title": {
            "type": "string",
            "description": "Title of the shop. This the brief heading located at the shop's main page."
          },
          "slogan": {
            "type": "string",
            "description": "Slogan or catchword located at the shop's main page."
          },
          "announcement": {
            "type": "string",
            "description": "Announcement to buyers located at the shop's main page."
          },
          "confirmation": {
            "type": "string",
            "description": "Order confirmation text. Is shown to buyers when an order is created after a successful payment."
          },
          "email": {
            "type": "string",
            "description": "Email address located at the shop's main page. This can be different than the shop owner's email."
          },
          "phone": {
            "type": "string",
            "description": "Phone number located at the shop's main page. This can be different than the shop owner's phone number."
          },
          "access": {
            "type": "boolean",
            "description": "Represents whether the shop URL is publicly accessible."
          },
          "cart": {
            "type": "boolean",
            "description": "Represents whether the shopping cart is used during checkouts. If the cart value is FALSE multiple products can not be purchased at the shop, only a single product can be purchased for each order."
          },
          "mobileView": {
            "type": "string",
            "enum": [
              "singleColumn",
              "doubleColumn"
            ],
            "description": "Shop's appearance for mobile devices. Products can be placed either on a single column or on double columns."
          },
          "filter": {
            "type": "boolean",
            "description": "Represents whether the product filter options are present or not."
          },
          "outOfStock": {
            "type": "boolean",
            "description": "Represents whether the out of stock products are shown to buyers."
          },
          "language": {
            "type": "string",
            "enum": [
              "TR",
              "EN"
            ],
            "description": "Language selection of the shop. "
          },
          "vacation": {
            "type": "boolean",
            "description": "Represents whether the seller accepts orders. Returns TRUE if the shop is closed for orders, returns FALSE if the shop is open for orders."
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "multipleOf": 1,
          "default": 10
        },
        "description": "The maximum number of items to be returned in result set."
      },
      "page": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "description": "Current page of the collection."
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "dateDesc",
          "enum": [
            "dateAsc",
            "dateDesc"
          ]
        },
        "description": "Sort results by date. "
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "x-readme": {
    "samples-languages": [
      "curl",
      "php",
      "node",
      "python",
      "csharp"
    ]
  }
}